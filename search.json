[{"path":"http://www.peteredewitt.com/medicalcoder/articles/charlson.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Charlson Comorbidities","text":"medicalcoder package implements several variants Charlson comorbidities algorithm. charslon_deyo1992: Deyo’s original set codes (Deyo, Cherkin, Ciol 1992; Quan et al. 2005) charlson_quan2005 charlson_quan2011: Codes index scoring (Quan et al. 2005, 2011) charlson_cdmf2019: (Glasheen et al. 2019)","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/charlson.html","id":"icd-codes-and-index-scores","dir":"Articles","previous_headings":"","what":"ICD Codes and Index Scores","title":"Charlson Comorbidities","text":"End users can access lookup tables mapping ICD-9 ICD-10 codes conditions index scoring data.frames get_charlson_codes() get_charlson_index_scores() calls respectively.","code":"str(get_charlson_codes()) ## 'data.frame':    7410 obs. of  9 variables: ##  $ icdv             : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx               : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ full_code        : chr  \"003.1\" \"007.2\" \"007.4\" \"010\" ... ##  $ code             : chr  \"0031\" \"0072\" \"0074\" \"010\" ... ##  $ condition        : chr  \"aids\" \"aids\" \"aids\" \"aids\" ... ##  $ charlson_cdmf2019: int  1 1 1 1 1 1 1 1 1 1 ... ##  $ charlson_deyo1992: int  0 0 0 0 0 0 0 0 0 0 ... ##  $ charlson_quan2005: int  0 0 0 0 0 0 0 0 0 0 ... ##  $ charlson_quan2011: int  0 0 0 0 0 0 0 0 0 0 ... str(get_charlson_index_scores()) ## 'data.frame':    21 obs. of  6 variables: ##  $ condition_description: chr  \"AIDS\" \"AIDS/HIV\" \"HIV infection, no AIDS\" \"Any malignancy\" ... ##  $ condition            : chr  \"aids\" \"aidshiv\" \"hiv\" \"mal\" ... ##  $ charlson_cdmf2019    : int  6 NA 3 2 1 1 1 1 2 1 ... ##  $ charlson_quan2011    : int  NA 4 NA 2 0 1 2 2 1 0 ... ##  $ charlson_quan2005    : int  NA 6 NA 2 1 1 1 1 2 1 ... ##  $ charlson_deyo1992    : int  NA 6 NA 2 1 1 1 1 2 1 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/articles/charlson.html","id":"applying-charlson","dir":"Articles","previous_headings":"","what":"Applying Charlson","title":"Charlson Comorbidities","text":"Example: applying Quan et al. (2005) variant Charlson comorbidities mdcr data done follows. return object data.frame 0/1 integer indicator columns relevant conditions, id.vars (applicable), age_score (age, years, supplied), num_cmrb number comorbidities, cmrb_flag 0/1 indicator presence least one comorbidity, cci Charlson Comorbidity Index. Call summary() return object list summary objects. can used generate output tables end user’s liking. Counts percentages patients mdcr example data sets Quan et al. (2005) comorbidities.","code":"mdcr_results <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icdv.var = \"icdv\",     icd.codes = \"code\",     dx.var = \"dx\",     flag.method = \"current\",     poa = 1,     method = \"charlson_quan2005\"   ) str(mdcr_results) ## Classes 'medicalcoder_comorbidities' and 'data.frame':   38262 obs. of  22 variables: ##  $ patid    : int  10000 10002 10005 10006 10008 10010 10014 10015 10017 10018 ... ##  $ aidshiv  : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ mal      : int  0 0 1 0 0 0 0 0 0 0 ... ##  $ cebvd    : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ copd     : int  1 0 0 0 0 0 0 0 0 0 ... ##  $ chf      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ dem      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ dmc      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ dm       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ hp       : int  0 0 0 0 0 0 0 1 0 0 ... ##  $ mld      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ msld     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ mst      : int  0 0 1 0 0 0 0 0 0 0 ... ##  $ mi       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ pud      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ pvd      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ rnd      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ rhd      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ num_cmrb : int  1 0 2 0 0 0 0 1 0 0 ... ##  $ cmrb_flag: int  1 0 1 0 0 0 0 1 0 0 ... ##  $ cci      : int  1 0 6 0 0 0 0 2 0 0 ... ##  $ age_score: int  NA NA NA NA NA NA NA NA NA NA ... ##  - attr(*, \"method\")= chr \"charlson_quan2005\" ##  - attr(*, \"id.vars\")= chr \"patid\" ##  - attr(*, \"flag.method\")= chr \"current\" str(   summary(mdcr_results) ) ## List of 3 ##  $ conditions   :'data.frame':   22 obs. of  4 variables: ##   ..$ condition_description: chr [1:22] \"AIDS/HIV\" \"Any malignancy\" \"Cerebrovascular disease\" \"Chronic pulmonary disease\" ... ##   ..$ condition            : chr [1:22] \"aidshiv\" \"mal\" \"cebvd\" \"copd\" ... ##   ..$ count                : num [1:22] 7 2577 411 3415 684 ... ##   ..$ percent              : num [1:22] 0.0183 6.7351 1.0742 8.9253 1.7877 ... ##  $ age_summary  :'data.frame':   1 obs. of  3 variables: ##   ..$ age_score: Factor w/ 0 levels: NA ##   ..$ count    : int 38262 ##   ..$ percent  : num 100 ##  $ index_summary:'data.frame':   1 obs. of  5 variables: ##   ..$ min   : int 0 ##   ..$ q1    : num 0 ##   ..$ median: num 0 ##   ..$ q3    : num 1 ##   ..$ max   : int 12 x <- summary(mdcr_results)$conditions[, c(\"condition_description\", \"count\", \"percent\")] tab <-   kableExtra::kbl(     x = x,     format = \"html\",     caption = \"Counts and percentages of patients in the mdcr example data sets with the @quan2005 comorbidities.\",     col.names = c(\"\", \"Count\", \"Percentage\"),     digits = 3   ) tab <- kableExtra::pack_rows(tab, group_label = \"Comorbidity\", start_row = 1, end_row = 17) tab <- kableExtra::pack_rows(tab, group_label = \"Total Comorbidities\", start_row = 18, end_row = nrow(x)) tab"},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/articles/comorbidities.html","id":"comorbidity-algorithms","dir":"Articles","previous_headings":"","what":"Comorbidity Algorithms","title":"Comorbidities","text":"three comorbidity algorithms, several variants, implemented medicalcoder package: pccc_v2.0 consistent older R package pccc (v1.0.6) (DeWitt, Feinstein, Russell 2025). pccc_v2.1 modifies set ICD codes consistent documentation implementations v2.0. pccc_v3.0 consistent SAS software published Children’s Hospital Association website conjunction Feinstein et al. (2024). pccc_v3.1 modifies set ICD codes consistent documentation. charslon_deyo1992: Deyo’s original set codes (Deyo, Cherkin, Ciol 1992; Quan et al. 2005) charlson_quan2005 charlson_quan2011: Codes index scoring (Quan et al. 2005, 2011) charlson_cdmf2019: (Glasheen et al. 2019) elixhauser_ahrq2022 elixhauser_ahrq2023 elixhauser_ahrq2024 elixhauser_ahrq2025 elixhauser_elixhauser1988: (Elixhauser et al. 1998; Quan et al. 2005) elixhauser_ahrq_web: (Quan et al. 2005; Cost (HCUP) 2017) elixhauser_quan2005: (Quan et al. 2005) IMPORTANT NOTE: Elixhauser 1998 AHRQ Web used diagnostic related group (DRG) codes part methods. medicalcoder package use DRG codes. consistent way methods implemented Quan et al. (2005). list valid methods package can accessed via non-exported function. general, methods listed form <algorithm>_<version>. Vignettes major methods available. focus vignette highlight general use comorbidities function. Details function arguments call manual. highlight general concept arguments. Note several arguments pairs, e.g., dx.var dx (used denoting codes diagnostic procedural), poa.var poa (used denoting codes present admission). .var version name variable within data.frame passed data argument. version without .var default value applied entirety data. see examples useful. data element expected data.frame, least something inherits data.frame class. format expected ‘long’ format. One row per code. Two example data sets package show general expected form data. great level detail comorbidity algorithms provided dedicated vignettes:","code":"medicalcoder:::comorbidities_methods() ##  [1] \"pccc_v2.0\"                 \"pccc_v2.1\"                 ##  [3] \"pccc_v3.0\"                 \"pccc_v3.1\"                 ##  [5] \"charlson_deyo1992\"         \"charlson_quan2011\"         ##  [7] \"charlson_quan2005\"         \"charlson_cdmf2019\"         ##  [9] \"elixhauser_elixhauser1988\" \"elixhauser_ahrq_web\"       ## [11] \"elixhauser_quan2005\"       \"elixhauser_ahrq2022\"       ## [13] \"elixhauser_ahrq2023\"       \"elixhauser_ahrq2024\"       ## [15] \"elixhauser_ahrq2025\" vignette(topic = \"pccc\", package = \"medicalcoder\") vignette(topic = \"charlson\", package = \"medicalcoder\") vignette(topic = \"elixhauser\", package = \"medicalcoder\") help(topic = \"comorbidities\", package = \"medicalcoder\") args(comorbidities) ## function (data, icd.codes, method, id.vars = NULL, icdv.var = NULL,  ##     icdv = NULL, dx.var = NULL, dx = NULL, poa.var = NULL, poa = NULL,  ##     age.var = NULL, primarydx.var = NULL, primarydx = NULL, flag.method = c(\"current\",  ##         \"cumulative\"), full.codes = TRUE, compact.codes = TRUE,  ##     subconditions = FALSE)  ## NULL head(mdcr) ##   patid icdv  code dx ## 1 71412    9 99931  1 ## 2 71412    9 75169  1 ## 3 71412    9 99591  1 ## 4 71412    9 V5865  1 ## 5 71412    9  V427  1 ## 6 17087   10  V441  1 head(mdcr_longitudinal) ##     patid       date icdv     code ## 1 9663901 2016-03-18   10   Z77.22 ## 2 9663901 2016-03-24   10  IMO0002 ## 3 9663901 2016-03-24   10 V87.7XXA ## 4 9663901 2016-03-25   10  J95.851 ## 5 9663901 2016-03-30   10  IMO0002 ## 6 9663901 2016-03-30   10    Z93.0 vignette(package = \"medicalcoder\")$results"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/comorbidities.html","id":"when-are-conditions-flag","dir":"Articles","previous_headings":"","what":"When are conditions flag?","title":"Comorbidities","text":"Whether code present admission (POA) useful applying comorbidity algorithms considering patient comorbidity time encounter start condition result current hospitalization. Implementation Elixhauser comorbidities 2022 beyond (Healthcare Research (AHRQ) 2025) explicitly define use present admission flags specific conditions (see poa_required flag reported data set returned get_elixhauser_poa). Charlson comorbidities, Quan et al. (2011): defined comorbidities previous admissions using major secondary diagnoses, without consideration diagnosis type. presence comorbid condition assigned patient present index previous admission records. Otherwise, absence condition assigned patient. Quan et al. (2005): decision whether include exclude specific codes conditions coding algorithm depends large extent given study’s objectives. original Charlson index used conditions present hospitalized medical patients (regardless whether condition present baseline arose admission) predict survival ensuing year. study, decision exclude conditions arising admission ideal, result loss prognostic information relevant long-term survival, ‘-adjustment’ risk-adjusted survival analyses. contrast, context studying -hospital outcomes surgical procedure, researchers best advised confine risk adjustment variables predominantly present baseline. jurisdictions diagnosis type indicators, methodological decision simply one deciding, based study objectives, whether use use indicators. regions countries without diagnosis type indicators, meanwhile, data present … can help researchers make decisions condition--condition basis whether include particular variables, depending study objectives. PCCC explicitly note POA required. medicalcoder built consider POA comorbidity algorithms. End users can use 0/1 indicator variable data set report codes POA via function argument poa.var. codes considered POA , functional argument poa can used set common status without adding column input data set. Additionally, medicalcoder provides flag.method argument longitudinal data sets. Example: Let’s assume patient record six encounters. use ICD-10 diagnostic codes C78.4 I50.40 maps cancer heart failure (cardiovascular disease) comorbidity respectively PCCC, Charlson, Elixhauser. demonstration, also flag POA second report I50.40 intentionally marked present admission. call comorbidities three methods using static POA flags dynamic POA flags, flag methods. Indicators comorbidity flagged based algorithm, present admission (poa), flag.method. two ICD codes,C78.4 I50.40, map cancer cardiovascular disease respectively.","code":"str(get_elixhauser_poa()) ## 'data.frame':    43 obs. of  7 variables: ##  $ condition          : chr  \"AIDS\" \"ALCOHOL\" \"ANEMDEF\" \"ANEMDEF\" ... ##  $ desc               : chr  \"Acquired immune deficiency syndrome\" \"Alcohol abuse\" \"Anemias due to other nutritional deficiencies\" \"Deficiency anemias\" ... ##  $ poa_required       : int  0 0 1 1 0 1 1 0 0 0 ... ##  $ elixhauser_ahrq2022: int  1 1 NA 1 1 NA 1 1 1 1 ... ##  $ elixhauser_ahrq2023: int  1 1 1 NA 1 1 NA 1 1 1 ... ##  $ elixhauser_ahrq2024: int  1 1 1 NA 1 1 NA 1 1 1 ... ##  $ elixhauser_ahrq2025: int  1 1 1 NA 1 1 NA 1 1 1 ... lookup_icd_codes(c(\"C78.4\", \"I50.40\")) ##   input_code match_type icdv dx full_code  code src known_start known_end ## 1      C78.4  full_code   10  1     C78.4  C784 cms        2014      2026 ## 2      C78.4  full_code   10  1     C78.4  C784 cdc        2001      2025 ## 3      C78.4  full_code   10  1     C78.4  C784 who        2008      2019 ## 4     I50.40  full_code   10  1    I50.40 I5040 cms        2014      2026 ##   assignable_start assignable_end ## 1             2014           2026 ## 2             2001           2025 ## 3             2008           2019 ## 4             2014           2026  subset(get_pccc_codes(),        subset = full_code %in% c(\"C78.4\", \"I50.40\"),        select = c(\"icdv\", \"dx\", \"code\", \"full_code\", \"condition\", \"pccc_v3.0\")) ##      icdv dx  code full_code  condition pccc_v3.0 ## 4523   10  1  C784     C78.4 malignancy         1 ## 6570   10  1 I5040    I50.40        cvd         1  subset(get_charlson_codes(),        subset = full_code %in% c(\"C78.4\", \"I50.40\"),        select = c(\"icdv\", \"dx\", \"code\", \"full_code\", \"condition\", \"charlson_quan2011\")) ##      icdv dx  code full_code condition charlson_quan2011 ## 3500   10  1  C784     C78.4       mst                 1 ## 5776   10  1 I5040    I50.40       chf                 1  subset(get_elixhauser_codes(),        subset = full_code %in% c(\"C78.4\", \"I50.40\") & elixhauser_ahrq2025 == 1L,        select = c(\"icdv\", \"dx\", \"code\", \"full_code\", \"condition\", \"elixhauser_ahrq2025\")) ##      icdv dx  code full_code   condition elixhauser_ahrq2025 ## 3394   10  1  C784     C78.4 CANCER_METS                   1 ## 7647   10  1 I5040    I50.40          HF                   1  record <- data.table::fread(text = \" patid | encid | code   | poa A     | 1     | NA     | NA A     | 2     | C78.4  | 0 A     | 3     | I50.40 | 1 A     | 4     | NA     | NA A     | 5     | C78.4  | 1 A     | 5     | I50.40 | 0 A     | 6     | NA     | NA \")"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/comorbidities.html","id":"mapping-icd-codes-to-comorbidities","dir":"Articles","previous_headings":"","what":"Mapping ICD Codes to Comorbidities","title":"Comorbidities","text":"End users can quickly assess lookup table ICD codes associated comorbidity algorithm using get_<comorbidity>_codes functions. data.frame columns ICD version, diagnostic procedure flag, compact code, full code. column condition method specific flags provided. Lastly, indicator columns variant method End users aware just ICD code exists data set mean patient condition. Elixhauser, presence admission important consider. PCCC version 3.0 3.1, tech dependencies insufficient flag condition (see vignette(topic = \"pccc\", package = \"medicalcoder\")). charlson_cdmf2019 method (Glasheen et al. 2019), AIDS categories defined presence HIV opportunistic infection. following example, considering ICD codes flag ‘aids’, several thousand cases AIDS, six cases HIV. calling comorbidities get expected result.","code":"str(get_pccc_codes()) ## 'data.frame':    7913 obs. of  12 variables: ##  $ icdv           : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx             : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ full_code      : chr  \"00.10\" \"00.50\" \"00.51\" \"00.53\" ... ##  $ code           : chr  \"0010\" \"0050\" \"0051\" \"0053\" ... ##  $ condition      : chr  \"malignancy\" \"cvd\" \"cvd\" \"cvd\" ... ##  $ subcondition   : chr  \"neoplasms\" \"device_and_technology_use\" \"device_and_technology_use\" \"device_and_technology_use\" ... ##  $ transplant_flag: int  0 0 0 0 0 0 0 1 1 1 ... ##  $ tech_dep_flag  : int  0 1 1 1 1 1 1 0 0 0 ... ##  $ pccc_v3.1      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ pccc_v3.0      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ pccc_v2.1      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ pccc_v2.0      : int  1 1 1 1 1 1 1 1 1 1 ... str(get_charlson_codes()) ## 'data.frame':    7410 obs. of  9 variables: ##  $ icdv             : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx               : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ full_code        : chr  \"003.1\" \"007.2\" \"007.4\" \"010\" ... ##  $ code             : chr  \"0031\" \"0072\" \"0074\" \"010\" ... ##  $ condition        : chr  \"aids\" \"aids\" \"aids\" \"aids\" ... ##  $ charlson_cdmf2019: int  1 1 1 1 1 1 1 1 1 1 ... ##  $ charlson_deyo1992: int  0 0 0 0 0 0 0 0 0 0 ... ##  $ charlson_quan2005: int  0 0 0 0 0 0 0 0 0 0 ... ##  $ charlson_quan2011: int  0 0 0 0 0 0 0 0 0 0 ... str(get_elixhauser_codes()) ## 'data.frame':    10679 obs. of  12 variables: ##  $ icdv                     : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx                       : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ full_code                : chr  \"042\" \"070.22\" \"070.23\" \"070.32\" ... ##  $ code                     : chr  \"042\" \"07022\" \"07023\" \"07032\" ... ##  $ condition                : chr  \"AIDS\" \"LIVER\" \"LIVER\" \"LIVER\" ... ##  $ elixhauser_ahrq_web      : int  1 1 1 1 1 1 1 0 0 0 ... ##  $ elixhauser_elixhauser1988: int  1 0 0 1 1 0 1 0 0 0 ... ##  $ elixhauser_quan2005      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ elixhauser_ahrq2022      : int  NA NA NA NA NA NA NA NA NA NA ... ##  $ elixhauser_ahrq2023      : int  NA NA NA NA NA NA NA NA NA NA ... ##  $ elixhauser_ahrq2024      : int  NA NA NA NA NA NA NA NA NA NA ... ##  $ elixhauser_ahrq2025      : int  NA NA NA NA NA NA NA NA NA NA ... cdmf_eg <-   merge(x = mdcr,         y = subset(get_charlson_codes(),                    condition %in% c(\"aids\", \"hiv\") &                    charlson_cdmf2019 == 1),         by = c(\"icdv\", \"dx\", \"code\")) data.table::setDT(cdmf_eg)  cdmf_eg <-   data.table::dcast(data = cdmf_eg,                     patid ~ condition,                     value.var = \"charlson_cdmf2019\",                     fun.aggregate = function(x) {as.integer(sum(x) > 0)})  cdmf_eg[, .N, keyby = .(hiv, aids)] ## Key: <hiv, aids> ##      hiv  aids     N ##    <int> <int> <int> ## 1:     0     1  2716 ## 2:     1     0     6 ## 3:     1     1     1 cmdf_mdcr <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 icdv.var = \"icdv\",                 dx.var = \"dx\",                 method = \"charlson_cdmf2019\",                 flag.method = \"current\",                 poa = 1) data.table::setDT(cmdf_mdcr)  cmdf_mdcr[, .N, keyby = .(hiv, aids)] ## Key: <hiv, aids> ##      hiv  aids     N ##    <int> <int> <int> ## 1:     0     0 38255 ## 2:     1     0     6 ## 3:     1     1     1"},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/articles/elixhauser.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Elixhauser Comorbidities","text":"medicalcoder package implements several variants Elixhauser comorbidity algorithm. elixhauser_ahrq2022 elixhauser_ahrq2023 elixhauser_ahrq2024 elixhauser_ahrq2025 elixhauser_elixhauser1988: (Elixhauser et al. 1998; Quan et al. 2005) elixhauser_ahrq_web: (Quan et al. 2005; Cost (HCUP) 2017) elixhauser_quan2005: (Quan et al. 2005) IMPORTANT NOTE: Elixhauser 1998 AHRQ Web used diagnostic related group (DRG) codes part methods. medicalcoder package use DRG codes. consistent way methods implemented Quan et al. (2005).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/elixhauser.html","id":"icd-codes-and-index-scores","dir":"Articles","previous_headings":"","what":"ICD Codes and Index Scores","title":"Elixhauser Comorbidities","text":"End users may access three lookup tables relevant Elixhauser variants. get_elixhauser_codes() returns data.frame ICD codes mapping condition indicators inclusion specific variants. get_elixhauser_index_scores() returns data.frame points scored per condition mortality readmission indices variant. get_elixhauser_poa() returns data.frame reports conditions required required present--admission conditions classified comorbidity variant. variants listed default Charlson PCCC methods, code needs present--admission condition flagged.","code":"str(get_elixhauser_codes()) ## 'data.frame':    10679 obs. of  12 variables: ##  $ icdv                     : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx                       : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ full_code                : chr  \"042\" \"070.22\" \"070.23\" \"070.32\" ... ##  $ code                     : chr  \"042\" \"07022\" \"07023\" \"07032\" ... ##  $ condition                : chr  \"AIDS\" \"LIVER\" \"LIVER\" \"LIVER\" ... ##  $ elixhauser_ahrq_web      : int  1 1 1 1 1 1 1 0 0 0 ... ##  $ elixhauser_elixhauser1988: int  1 0 0 1 1 0 1 0 0 0 ... ##  $ elixhauser_quan2005      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ elixhauser_ahrq2022      : int  NA NA NA NA NA NA NA NA NA NA ... ##  $ elixhauser_ahrq2023      : int  NA NA NA NA NA NA NA NA NA NA ... ##  $ elixhauser_ahrq2024      : int  NA NA NA NA NA NA NA NA NA NA ... ##  $ elixhauser_ahrq2025      : int  NA NA NA NA NA NA NA NA NA NA ... str(get_elixhauser_index_scores()) ## 'data.frame':    112 obs. of  9 variables: ##  $ condition                : chr  \"AIDS\" \"AIDS\" \"ALCOHOL\" \"ALCOHOL\" ... ##  $ index                    : chr  \"mortality\" \"readmission\" \"mortality\" \"readmission\" ... ##  $ elixhauser_ahrq_web      : int  0 19 -1 6 -2 9 0 4 NA NA ... ##  $ elixhauser_elixhauser1988: int  0 19 -1 6 -2 9 0 4 NA NA ... ##  $ elixhauser_quan2005      : int  0 19 -1 6 -2 9 0 4 NA NA ... ##  $ elixhauser_ahrq2022      : int  -4 5 -1 3 -3 5 NA NA -1 2 ... ##  $ elixhauser_ahrq2023      : int  -4 5 -1 3 -3 5 NA NA 0 2 ... ##  $ elixhauser_ahrq2024      : int  -4 5 -1 3 -3 5 NA NA 0 2 ... ##  $ elixhauser_ahrq2025      : int  -4 5 -1 3 -3 5 NA NA 0 2 ... str(get_elixhauser_poa()) ## 'data.frame':    43 obs. of  7 variables: ##  $ condition          : chr  \"AIDS\" \"ALCOHOL\" \"ANEMDEF\" \"ANEMDEF\" ... ##  $ desc               : chr  \"Acquired immune deficiency syndrome\" \"Alcohol abuse\" \"Anemias due to other nutritional deficiencies\" \"Deficiency anemias\" ... ##  $ poa_required       : int  0 0 1 1 0 1 1 0 0 0 ... ##  $ elixhauser_ahrq2022: int  1 1 NA 1 1 NA 1 1 1 1 ... ##  $ elixhauser_ahrq2023: int  1 1 1 NA 1 1 NA 1 1 1 ... ##  $ elixhauser_ahrq2024: int  1 1 1 NA 1 1 NA 1 1 1 ... ##  $ elixhauser_ahrq2025: int  1 1 1 NA 1 1 NA 1 1 1 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/articles/elixhauser.html","id":"applying-elixhauser","dir":"Articles","previous_headings":"","what":"Applying Elixhauser","title":"Elixhauser Comorbidities","text":"Elixhauser method considers diagnostic codes primary secondary diagnoses. , following call throw warning primarydx.var primarydx argument set conditions assumed secondary. suppress warning pass appropriate value either argument. return object data.frame 0/1 integer indicator columns relevant conditions, id.vars (applicable), num_cmrb number comorbidities, cmrb_flag 0/1 indicator presence least one comorbidity, mortality readmission index scores. Call summary() get list summaries can used generate summary tables. Counts percentages patients mdcr example data sets Elixhauser Quan et al. (2005) comorbidities.","code":"# will warn because primarydx and primarydx.var are both NULL mdcr_results0 <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icdv.var = \"icdv\",     icd.codes = \"code\",     dx.var = \"dx\",     flag.method = \"current\",     poa = 1,     method = \"elixhauser_ahrq2025\"   ) ## Warning: Assuming all codes provided are secondary diagnostic codes.  Define ## `primarydx.var` or `primarydx` if this assumption is incorrect.  # no warning mdcr_results <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icdv.var = \"icdv\",     icd.codes = \"code\",     dx.var = \"dx\",     flag.method = \"current\",     poa = 1,     method = \"elixhauser_ahrq2025\",     primarydx = 0   )  identical(mdcr_results, mdcr_results0) ## [1] TRUE str(mdcr_results) ## Classes 'medicalcoder_comorbidities' and 'data.frame':   38262 obs. of  43 variables: ##  $ patid            : int  10000 10002 10005 10006 10008 10010 10014 10015 10017 10018 ... ##  $ AIDS             : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ ALCOHOL          : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ ANEMDEF          : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ AUTOIMMUNE       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ BLDLOSS          : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ CANCER_LEUK      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ CANCER_LYMPH     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ CANCER_METS      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ CANCER_NSITU     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ CANCER_SOLID     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ CBVD             : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ COAG             : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ DEMENTIA         : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ DEPRESS          : int  0 1 0 0 0 0 0 0 0 1 ... ##  $ DIAB_CX          : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ DIAB_UNCX        : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ DRUG_ABUSE       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ HF               : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ HTN_CX           : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ HTN_UNCX         : int  0 0 0 0 0 0 1 0 0 0 ... ##  $ LIVER_MLD        : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ LIVER_SEV        : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ LUNG_CHRONIC     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ NEURO_MOVT       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ NEURO_OTH        : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ NEURO_SEIZ       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ OBESE            : int  0 1 0 0 0 0 0 0 0 0 ... ##  $ PARALYSIS        : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ PERIVASC         : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ PSYCHOSES        : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ PULMCIRC         : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ RENLFL_MOD       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ RENLFL_SEV       : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ THYROID_HYPO     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ THYROID_OTH      : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ ULCER_PEPTIC     : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ VALVE            : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ WGHTLOSS         : int  0 0 0 0 0 0 1 0 0 0 ... ##  $ num_cmrb         : int  0 2 0 0 0 0 2 0 0 1 ... ##  $ cmrb_flag        : int  0 1 0 0 0 0 1 0 0 1 ... ##  $ mortality_index  : int  0 -15 0 0 0 0 13 0 0 -8 ... ##  $ readmission_index: int  0 0 0 0 0 0 6 0 0 2 ... ##  - attr(*, \"method\")= chr \"elixhauser_ahrq2025\" ##  - attr(*, \"id.vars\")= chr \"patid\" ##  - attr(*, \"flag.method\")= chr \"current\" summary(mdcr_results) ## $conditions ##       condition count      percent ## 1          AIDS     3  0.007840677 ## 2       ALCOHOL    11  0.028749151 ## 3       ANEMDEF   700  1.829491401 ## 4    AUTOIMMUNE   170  0.444305055 ## 5       BLDLOSS    33  0.086247452 ## 6   CANCER_LEUK   381  0.995766034 ## 7  CANCER_LYMPH    76  0.198630495 ## 8   CANCER_METS   213  0.556688098 ## 9  CANCER_NSITU     0  0.000000000 ## 10 CANCER_SOLID   477  1.246667712 ## 11         CBVD     0  0.000000000 ## 12         COAG   877  2.292091370 ## 13     DEMENTIA    35  0.091474570 ## 14      DEPRESS   321  0.838952485 ## 15      DIAB_CX   123  0.321467775 ## 16    DIAB_UNCX   184  0.480894883 ## 17   DRUG_ABUSE    77  0.201244054 ## 18           HF   246  0.642935550 ## 19       HTN_CX   286  0.747477915 ## 20     HTN_UNCX   395  1.032355862 ## 21    LIVER_MLD   179  0.467827087 ## 22    LIVER_SEV   159  0.415555904 ## 23 LUNG_CHRONIC  1359  3.551826878 ## 24   NEURO_MOVT   139  0.363284721 ## 25    NEURO_OTH   948  2.477654069 ## 26   NEURO_SEIZ  1490  3.894203126 ## 27        OBESE   315  0.823271131 ## 28    PARALYSIS   767  2.004599864 ## 29     PERIVASC   209  0.546233861 ## 30    PSYCHOSES    96  0.250901678 ## 31     PULMCIRC   332  0.867701636 ## 32   RENLFL_MOD   107  0.279650828 ## 33   RENLFL_SEV   247  0.645549109 ## 34 THYROID_HYPO   371  0.969630443 ## 35  THYROID_OTH    36  0.094088129 ## 36 ULCER_PEPTIC    23  0.060111860 ## 37        VALVE   572  1.494955831 ## 38     WGHTLOSS   616  1.609952433 ## 39         >= 1  7850 20.516439287 ## 40         >= 2  3150  8.232711306 ## 41         >= 3  1108  2.895823532 ## 42         >= 4   329  0.859860959 ## 43         >= 5   110  0.287491506 ## 44         >= 6    21  0.054884742 ## 45         >= 7     4  0.010454237 ## 46         >= 8     1  0.002613559 ##  ## $index_summary ##         index min q1 median q3 max ## 1 readmission  -2  0      0  0  35 ## 2   mortality -24  0      0  0  75 x <- summary(mdcr_results)$conditions tab <-   kableExtra::kbl(     x = x,     format = \"html\",     caption = \"Counts and percentages of patients in the mdcr example data sets with the Elixhauser @quan2005 comorbidities.\",     col.names = c(\"\", \"Count\", \"Percentage\"),     digits = 3   ) tab <- kableExtra::pack_rows(tab, group_label = \"Comorbidity\", start_row = 1, end_row = 39) tab <- kableExtra::pack_rows(tab, group_label = \"Total Comorbidities\", start_row = 39, end_row = nrow(x)) tab"},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"get_icd_codes","dir":"Articles","previous_headings":"","what":"get_icd_codes()","title":"ICD Codes","text":"look table ICD codes built internal data sets within medicalcoder package. sources look tables come Centers Disease Control (CDC) Centers Medicare & Medicaid Services (CMS). specific links source data sets can found source code medicalcoder package GitHub. End users can get data.frame ICD-9 diagnostic, ICD-9 procedure, ICD-10 diagnostic, ICD-10 procedure codes. columns data.frame : icdv: integer value 9 10 indicating ICD-9 ICD-10 dx: 1 code diagnostic code, .e., ICD-9-CM ICD-10-CM standard. also covers codes World Health Organization () Center Disease Control Prevention (CDC) Mortality codes. dx 0 code procedure code, .e., ICD-9-PCS ICD-10-PCS standard. full_code: full ICD code decimal point applicable. code: compact code, applicable decimal point omitted. src: character vector denoting source information. known_start: first year medicalcoder package data code. codes based ICD-9-CM, ICD-9-PCS, ICD-10-CM, ICD-10-PCS standards year fiscal year United States Federal Government; October 1 - September 30. example, fiscal year 2018 started October 1, 2017 ended September 30, 2018. codes World Health Organization () Centers Disease Control Prevention (CDC) Mortality coding, year calendar year. known_end: last year code part standard, medicalcoder package data . ICD-9 last year active use FY 2015. ICD-10 active. current version medicalcoder details ICD-10 codes FY 2026. assignable_start: first year (fiscal calendar based src) code assignable. NA indicates code never assignable. Assignable status can vary source source. example code “C84.6” assignable code using ICD-10 codes code granularity. code assignable ICD-10-CM codes C84.60, C84.61, C84.62, C84.63, C84.64, C84.65, C84.66, C84.67, C84.68, C84.69, C84.6A exist. Codes assignable called header codes. Ideally codes reported greatest level granularity, always case. assignable_end: last year code assignable. get descriptions ICD codes call get_icd_codes() .descriptions = TRUE. return additional columns: desc: description code desc_start: first fiscal_year description documented desc_end: last fiscal_year description documented time descriptions ICD codes modified within sources. also many differences sources. table several examples. Z88.7 differences description time within cms source cms . difference description 010.93 comma. ICD-9-CM V79.49 description ‘’ require exploration header codes understand. Even verbose description may still require consideration header codes fully understand. Lastly, get_icd_codes() function includes argument .hierarchy provide additional details codes. additional columns, order hierarchy, : chapter subchapter category subcategory subclassification subsubclassification extension keep install size medicalcoder size limits CRAN, stored data structured way several joins operations need data set end user friendly. Several data sets generated cached namespace loaded.","code":"cat(packageDescription('medicalcoder')$URL) ## http://www.peteredewitt.com/medicalcoder/, ## https://github.com/dewittpe/medicalcoder/ library(medicalcoder) icd_codes <- get_icd_codes() str(icd_codes) ## 'data.frame':    227534 obs. of  9 variables: ##  $ icdv            : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx              : int  0 0 0 0 0 0 1 0 1 0 ... ##  $ full_code       : chr  \"00\" \"00.0\" \"00.01\" \"00.02\" ... ##  $ code            : chr  \"00\" \"000\" \"0001\" \"0002\" ... ##  $ src             : chr  \"cms\" \"cms\" \"cms\" \"cms\" ... ##  $ known_start     : int  2003 2003 2003 2003 2003 2003 1997 2003 1997 2003 ... ##  $ known_end       : int  2015 2015 2015 2015 2015 2015 2015 2015 2015 2015 ... ##  $ assignable_start: int  NA NA 2003 2003 2003 2003 NA NA 1997 2003 ... ##  $ assignable_end  : int  NA NA 2015 2015 2015 2015 NA NA 2015 2015 ... str(get_icd_codes(with.descriptions = TRUE)) ## 'data.frame':    241988 obs. of  12 variables: ##  $ icdv            : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx              : int  0 0 0 0 0 0 1 0 1 1 ... ##  $ full_code       : chr  \"00\" \"00.0\" \"00.01\" \"00.02\" ... ##  $ code            : chr  \"00\" \"000\" \"0001\" \"0002\" ... ##  $ src             : chr  \"cms\" \"cms\" \"cms\" \"cms\" ... ##  $ known_start     : int  2003 2003 2003 2003 2003 2003 1997 2003 1997 1997 ... ##  $ known_end       : int  2015 2015 2015 2015 2015 2015 2015 2015 2015 2015 ... ##  $ assignable_start: int  NA NA 2003 2003 2003 2003 NA NA 1997 1997 ... ##  $ assignable_end  : int  NA NA 2015 2015 2015 2015 NA NA 2015 2015 ... ##  $ desc            : chr  \"Procedures and interventions, Not Elsewhere Classified\" \"Therapeutic ultrasound\" \"Therapeutic ultrasound of vessels of head and neck\" \"Therapeutic ultrasound of heart\" ... ##  $ desc_start      : int  2003 2003 2003 2003 2003 2003 1997 2003 1997 2010 ... ##  $ desc_end        : int  2015 2015 2015 2015 2015 2015 2015 2015 2009 2015 ... delta_in_desc <-   subset(get_icd_codes(with.descriptions = TRUE),          subset = full_code %in% c(\"Z88.7\", \"010.93\", \"V76.49\"),          select = c(\"full_code\", \"src\", \"desc\", \"desc_start\", \"desc_end\")) str(get_icd_codes(with.hierarchy = TRUE)) ## 'data.frame':    227534 obs. of  16 variables: ##  $ icdv                : int  10 10 10 10 10 10 10 10 10 10 ... ##  $ dx                  : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ full_code           : chr  \"001\" \"0016070\" \"0016071\" \"0016072\" ... ##  $ code                : chr  \"001\" \"0016070\" \"0016071\" \"0016072\" ... ##  $ src                 : chr  \"cms\" \"cms\" \"cms\" \"cms\" ... ##  $ known_start         : int  2014 2014 2014 2014 2014 2014 2014 2014 2014 2014 ... ##  $ known_end           : int  2026 2026 2026 2026 2026 2026 2026 2026 2026 2026 ... ##  $ assignable_start    : int  NA 2014 2014 2014 2014 2014 2014 2014 2014 2014 ... ##  $ assignable_end      : int  NA 2026 2026 2026 2026 2026 2026 2026 2026 2026 ... ##  $ chapter             : chr  \"0  Medical and Surgical\" \"0  Medical and Surgical\" \"0  Medical and Surgical\" \"0  Medical and Surgical\" ... ##  $ subchapter          : chr  \"00 Central Nervous System and Cranial Nerves\" \"00 Central Nervous System and Cranial Nerves\" \"00 Central Nervous System and Cranial Nerves\" \"00 Central Nervous System and Cranial Nerves\" ... ##  $ category            : chr  \"001\" \"001\" \"001\" \"001\" ... ##  $ subcategory         : chr  NA \"0016\" \"0016\" \"0016\" ... ##  $ subclassification   : chr  NA \"00160\" \"00160\" \"00160\" ... ##  $ subsubclassification: chr  NA \"001607\" \"001607\" \"001607\" ... ##  $ extension           : chr  NA \"0016070\" \"0016071\" \"0016072\" ..."},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"lookup_icd_codes","dir":"Articles","previous_headings":"","what":"lookup_icd_codes()","title":"ICD Codes","text":"related function, lookup_icd_codes(), allows user look specific ICD codes. return data.frame. columns report input code, matched full code (applicable decimal point) compact code (applicable decimal point omitted) along ICD version ,type, code assignable. possible restrict look just full compact codes. default, shown , consider full compact codes. Set full.codes = FALSE compact codes considered. set compact.codes = FALSE consider full codes. default, lookup_icd_codes() considers input string direct match internal lookup table made. lookup_icd_codes() can also accept regular expressions. providing vector regular expression patterns codes (passed grep())","code":"codes <- c(\"0011\", \"7329\", \"732\", \"73291\", \"not a code\", \"001.1\", \"A9248\", \"A924\", \"Z00\") knitr::kable(lookup_icd_codes(codes), row.names = FALSE) knitr::kable(   lookup_icd_codes(codes, full.codes = FALSE),   row.names = FALSE ) knitr::kable(   lookup_icd_codes(codes, compact.codes = FALSE),   row.names = FALSE ) knitr::kable(   lookup_icd_codes(x = \"^C84\\\\.6[0-1A-Z]\", regex = TRUE),   row.names = FALSE )"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"is_icd","dir":"Articles","previous_headings":"","what":"is_icd()","title":"ICD Codes","text":"convention, ICD codes generally reported without decimal points. convention discriminating ICD-9 ICD-10, diagnostic procedure codes can difficult. “7993” valid code? valid ICD-10 code four digit code ICD-10 procedure code, ICD-10 diagnostic codes start letter, number. string ICD-9 code. valid ICD-9 diagnostic code, valid ICD-9 procedure code. vector possible codes: codes decimal points discriminating ICD-9 diagnostic procedure codes can done.","code":"is_icd(x = \"7993\") ## Warning: Input '7993' is a: ICD 9 dx compact; ICD 9 pr compact ## [1] TRUE is_icd(x = \"7993\", icdv =  9, dx = 1) ## [1] TRUE is_icd(x = \"7993\", icdv =  9, dx = 0) ## [1] TRUE is_icd(x = \"7993\", icdv = 10, dx = 1) ## [1] FALSE is_icd(x = \"7993\", icdv = 10, dx = 0) ## [1] FALSE lookup_icd_codes(\"7993\") ##   input_code   match_type icdv dx full_code code src known_start known_end ## 1       7993 compact_code    9  1     799.3 7993 cms        1997      2015 ## 2       7993 compact_code    9  0     79.93 7993 cms        1997      2015 ##   assignable_start assignable_end ## 1             1997           2015 ## 2             1997           2015 x <- c(\"7993\", \"A924\", \"7993\", \"A924\", \"no\", \"A92\", \"516\", \"5163\", \"51631\", \"A00\") is_icd(x) ## Warning: Input '7993' is a: ICD 9 dx compact; ICD 9 pr compact ## Warning: Input '5163' is a: ICD 9 dx compact; ICD 9 pr compact ##  [1]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE x <- c(\"7993\",  # valid dx and pr code        \".7993\", # not a valid code        \"7.993\", # not a valid code        \"79.93\", # invalid dx code; valid pr code        \"799.3\", # valid dx code; invalid pr code        \"7993.\") # not a valid code data.frame(x = x,            icd9_dx = is_icd(x, icdv = 9, dx = 1, warn.ambiguous = FALSE),            icd9_pr = is_icd(x, icdv = 9, dx = 0, warn.ambiguous = FALSE)) ##       x icd9_dx icd9_pr ## 1  7993    TRUE    TRUE ## 2 .7993   FALSE   FALSE ## 3 7.993   FALSE   FALSE ## 4 79.93   FALSE    TRUE ## 5 799.3    TRUE   FALSE ## 6 7993.   FALSE   FALSE"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"assignable-codes","dir":"Articles","previous_headings":"is_icd()","what":"Assignable codes","title":"ICD Codes","text":"Ideally, codes reported greatest level detail. always chance incomplete coding, possible assignable code one year becomes header code subsequent year. Let’s look ICD-9 DX code 516.3 five digit codes 516.30 516.39 (valid, ’ll see examples.) Given default settings, following results testing strings valid ICD-9 dx codes. default, year provided is_icd() call return TRUE code ever assignable. Similar information can quickly easily retrieved via lookup_icd_codes(). fiscal years 1997 2011 code 516.3 assignable. 2012 516.3 assignable due introduction five digit codes 516.30, 516.31, 516.32, 516.33, 516.34, 516.35, 516.36, 516.37. Codes 526.38 516.39 never ICD-9-CM standard. looking retrospective data several years use ever.assignable argument simplify testing valid codes.","code":"x <- paste0(\"516.3\", c(\"\", 0:9)) tab <-   data.frame(     code       = x,     default    = is_icd(x, icdv = 9, dx = 1),     assignable_1997 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 1997),     assignable_2010 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2010),     assignable_2011 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2011),     assignable_2012 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2012),     assignable_2013 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2013),     assignable_2016 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2016),     assignable_ever = is_icd(x, src = \"cms\", icdv = 9, dx = 1, ever.assignable = TRUE)   ) ## Warning: The combination of `icdv` = 9; `dx` = 1; and `src` = cms; has ICD ## codes with a max known_end year of 2015. The input of `year` = 2016 results in ## no possible positive match. knitr::kable(tab) knitr::kable(lookup_icd_codes(x))"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"header-codes","dir":"Articles","previous_headings":"is_icd()","what":"Header codes","title":"ICD Codes","text":"also option considering header codes valid. seen , code “516” header, never assignable ICD-9-CM. setting headerok = TRUE “516” flagged valid code. ICD-10 header “A00” FALSE following checks ICD-9 codes. complex situation ICD-9-CM code 719.7 five digit codes 719.70, 719.75, 719.76, 719.77, 719.78, 719.79. five digit codes assignable codes FY 2004. Starting FY 2004 five digit codes removed standard four digit code became assignable. rare example header code becoming assignable.","code":"x <- c(\"516\", \"5163\", \"51631\", \"A00\") tab <-   data.frame(     code     = x,     default  = is_icd(x, icdv = 9, dx = 1, src = \"cms\", headerok = FALSE, ever.assignable = FALSE, warn.ambiguous = FALSE),     ever     = is_icd(x, icdv = 9, dx = 1, src = \"cms\", headerok = FALSE, ever.assignable = TRUE,  warn.ambiguous = FALSE),     headerok = is_icd(x, icdv = 9, dx = 1, src = \"cms\", headerok = TRUE,                           warn.ambiguous = FALSE)   ) knitr::kable(tab) x <- paste0(\"719.7\", c(\"\", \"0\", 5:9)) tab <-   data.frame(     code            = x,     default         = is_icd(x, src = \"cms\", icdv = 9, dx = 1),     assignable_2002 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2002),     assignable_2003 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2003),     assignable_2004 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2004),     assignable_2005 = is_icd(x, src = \"cms\", icdv = 9, dx = 1, year = 2005),     assignable_ever = is_icd(x, src = \"cms\", icdv = 9, dx = 1, ever.assignable = TRUE)   ) knitr::kable(tab)"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"icd_compact_to_full","dir":"Articles","previous_headings":"","what":"icd_compact_to_full()","title":"ICD Codes","text":"go full code compact code simple, omit decimal point string. go compact code full code requires knowing code version 9 10, diagnostic procedure code. icd_compact_to_full() format string appropriately, within reason. method formats strings validate return. example, compact code “E1234” format expected ICD-9 diagnostic code ICD-10 diagnostic code. procedure code ICD-9 procedure codes numeric values ICD-10 procedure codes seven characters long. actual code E1234 valid ICD code. use string example. Notice change string made trying convert full procedure code.","code":"icd_compact_to_full(\"E1234\", icdv =  9, dx = 1) ## [1] \"E123.4\" icd_compact_to_full(\"E1234\", icdv = 10, dx = 1) ## [1] \"E12.34\"  lookup_icd_codes(c(\"E1234\", \"E123.4\", \"E12.34\"))[, c(\"input_code\", \"match_type\")] ##   input_code match_type ## 3      E1234       <NA> ## 2     E123.4       <NA> ## 1     E12.34       <NA> icd_compact_to_full(\"E1234\", icdv =  9, dx = 0) ## [1] \"E1234\" icd_compact_to_full(\"E1234\", icdv = 10, dx = 0) ## [1] \"E1234\""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"general-notes-on-icd-code-structure","dir":"Articles","previous_headings":"","what":"General Notes on ICD Code Structure","title":"ICD Codes","text":"four sets codes hierarchical structure. first level hierarchy chapter groups codes disease category, body system, /condition. Following subchapters ICD-9 procedure codes. subchapter, depending ICD variant, category, subcategory, subclassification, subsubclassification, extension.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"icd-9-diagnostic-codes","dir":"Articles","previous_headings":"General Notes on ICD Code Structure","what":"ICD-9 Diagnostic Codes","title":"ICD Codes","text":"ICD-9 Diagnostic codes organized hierarchy five levels: chapter, subchapter, category, subcategory, subclassification. ICD-9 diagnostic codes three five digits, counting decimal point, numeric alpha numeric strings. first three digits category numeric code 000 999 (leading zeros part numeric code), V00-V99, E000-E999. category provide sufficient detail, fourth numeric digit, separated category decimal point, used. Lastly, subcategory insufficient detail, fifth numeric digit used, save E categories.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"icd-9-procedure-codes","dir":"Articles","previous_headings":"General Notes on ICD Code Structure","what":"ICD-9 Procedure Codes","title":"ICD Codes","text":"ICD-9 Procedure codes organized hierarchy four levels: chapter, category, subcategory, subclassification. codes numeric strings four digits decimal point second third digits. first two digits category, third digit subcategory, fourth digit subclassification.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"icd-10-diagnostic-codes","dir":"Articles","previous_headings":"General Notes on ICD Code Structure","what":"ICD-10 Diagnostic Codes","title":"ICD Codes","text":"ICD-10 diagnostic codes seven alphanumeric codes hierarchy chapter, subchapter, category, subcategory, subclassification, subsubclassification, extension. category describes general type disease injury, subcategory, subclassification subsubclassification providing detail cause, manifestation, location, severity, type disease injury. Finally, extension specifies type encounter, .e., initial subsequent encounter, sequela encounters related prior disease injury.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/icd.html","id":"icd-10-procedure-codes","dir":"Articles","previous_headings":"General Notes on ICD Code Structure","what":"ICD-10 Procedure Codes","title":"ICD Codes","text":"general, ICD-10 procedure codes seven digits. medicalcoder, three digit (chapter, subchapter, category) seven digit codes data base.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Pediatric Complex Chronic Conditions","text":"Pediatric Complex Chronic Condition (PCCC) coding schema version 2 published 2014 (Feudtner et al. 2014) updated version 3 2024 (Feinstein et al. 2024). versions identify 11 conditions, multiple subconditions. Syntactically valid names complex chronic conditions PCCC system provides standardized approach identifying children complex chronic conditions using administrative data. several important implications: Research comparability: Standard definitions allow findings compared across studies institutions. Policy planning: Accurate identification populations high medical needs supports resource allocation health policy decisions. Clinical insight: Coding consistency helps clinicians researchers understand disease burden outcomes pediatric populations. Without common framework PCCC, studies chronic pediatric conditions fragmented, limiting impact research practice.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"pccc-version-2-0-vs-pccc-version-3-0","dir":"Articles","previous_headings":"","what":"PCCC Version 2.0 vs PCCC Version 3.0","title":"Pediatric Complex Chronic Conditions","text":"Versions 2 3 differ mainly technology dependence treated. Many ICD codes map primary condition either technology dependence transplant. versions, transplant-related codes indicate organ system failure. patient code flagged transplant related condition. Technology dependence, however, diverges versions. version 2, presence technology dependence code classifies patient associated condition technology dependence. example, ICD-10 Z46.81 metabolic technology dependence code. patient code classified metabolic condition technology dependence. Version 3 refines rule: technology dependence codes assessed conditionally, recognizing many reflect chronic conditions. Example: ICD-10 Z46.81 (Encounter fitting adjustment insulin pump) metabolic technology dependence code. patient code medical records classified metabolic condition tech dependence. version 2, patient flagged metabolic condition technology dependence. version 3, patient flagged metabolic condition technology dependence least one non-technology condition flagged.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"icd-codes-for-pccc","dir":"Articles","previous_headings":"PCCC Version 2.0 vs PCCC Version 3.0","what":"ICD Codes for PCCC","title":"Pediatric Complex Chronic Conditions","text":"Let’s look codes PCCC schema. Calling get_pccc_codes returns data.frame. columns : icdv: integer, ICD version dx: 1 diagnostic (ICD-9-CM ICD-10-CM) codes, 0 procedure (ICD-9-PCS ICD-10-PCS) codes. full_code: character, ICD code retaining applicable decimal point. code: character, compact ICD code; applicable decimal point omitted. Examples: ICD-9-CM full code 553.3 represented 5533 compact code. ICD-10-CM full code C96.9 represented compact code C969. condition: character, pccc condition syntactically valid names. subcondition: character, pccc subcondition syntactically valid names. transplant_flag: integer, 1L ICD code associated transplant, 0L otherwise tech_dep_flag: integer, 1L ICD code associated technology dependence, 0L otherwise. pccc_vX.Y: integer, 1L code part variant X.Y, 0L otherwise","code":"pccc_codes <- get_pccc_codes() str(pccc_codes) ## 'data.frame':    7913 obs. of  12 variables: ##  $ icdv           : int  9 9 9 9 9 9 9 9 9 9 ... ##  $ dx             : int  0 0 0 0 0 0 0 0 0 0 ... ##  $ full_code      : chr  \"00.10\" \"00.50\" \"00.51\" \"00.53\" ... ##  $ code           : chr  \"0010\" \"0050\" \"0051\" \"0053\" ... ##  $ condition      : chr  \"malignancy\" \"cvd\" \"cvd\" \"cvd\" ... ##  $ subcondition   : chr  \"neoplasms\" \"device_and_technology_use\" \"device_and_technology_use\" \"device_and_technology_use\" ... ##  $ transplant_flag: int  0 0 0 0 0 0 0 1 1 1 ... ##  $ tech_dep_flag  : int  0 1 1 1 1 1 1 0 0 0 ... ##  $ pccc_v3.1      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ pccc_v3.0      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ pccc_v2.1      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ pccc_v2.0      : int  1 1 1 1 1 1 1 1 1 1 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"examples","dir":"Articles","previous_headings":"PCCC Version 2.0 vs PCCC Version 3.0","what":"Examples","title":"Pediatric Complex Chronic Conditions","text":"Example: Consider patient following four diagnostic two procedure ICD-9 codes: inner join pccc_codes pat1 yield conditions patient . PCCC variants, one matching dx code, 343.2, infantile cerebral palsy, matches neuromuscular condition. procedure code 86.06 matches technology dependent metabolic condition. version 2.0 PCCC (variants pccc_v2.0 pccc_v2.1), patient two conditions, neuromuscular, metabolic. patient also flag device technology use. version 3 PCCC, patient two conditions: neuromuscular metabolic. technology dependence flags also 1 patient, counted total number conditions. output version 3, four 0/1 indicator columns conditions. <condition>_dxpr_only: <condition> flagged due diagnostic procedure (pr) codes . <condition>_tech_only: <condition> flagged due presence technology dependence code least one condition flagged dx pr codes. <condition>_dxpr_and_tech: <condition> flagged due presence dx pr code associated technology dependence another dx pr code associated technology dependence. <condition>_dxpr_or_tech: <condition> flagged. columns answer question “<condition> exist patient/encounter.” details list might easier understand tabular form possible sets. case conditions, <condition>_dxpr_or_tech columns flagged 0/1 <condition>_dxpr_only, <condition>_tech_only, <condition>_dxpr_and_tech columns set NA. least one condition flagged, columns populated 0/1. Now, consider another patient, pat2, codes pat1 except 3432, code mapping neuromuscular condition. version 2 PCCC patient still metabolic technology dependence conditions code 86.06 record, neuromuscular condition. version 3 PCCC, patient conditions. condition identified based non-technology dependent codes thus one technology dependent code ignored.","code":"pat1 <-   data.frame(dx = c(1, 1, 1, 1, 0, 0),              icdv = 9L,              code = c(\"34590\", \"78065\", \"3432\", \"78065\", \"9929\", \"8606\")) merge(x = pccc_codes, y = pat1, all = FALSE, by = c(\"icdv\", \"dx\", \"code\")) ##   icdv dx code full_code condition              subcondition transplant_flag ## 1    9  0 8606     86.06 metabolic device_and_technology_use               0 ## 2    9  1 3432     343.2 neuromusc  infantile_cerebral_palsy               0 ##   tech_dep_flag pccc_v3.1 pccc_v3.0 pccc_v2.1 pccc_v2.0 ## 1             1         1         1         1         1 ## 2             0         1         1         1         1 pat1_pccc_v2.0 <-   comorbidities(        data = pat1,        icd.codes = \"code\",        dx.var = \"dx\",        icdv = 9,        method = \"pccc_v2.0\",        flag.method = \"current\", # default        poa = 1                  # default for flag.method = 'current'   )  pat1_pccc_v2.1 <-   comorbidities(        data = pat1,        icd.codes = \"code\",        dx.var = \"dx\",        icdv = 9,        method = \"pccc_v2.1\",        flag.method = \"current\",        poa = 1   )  all.equal(pat1_pccc_v2.0, pat1_pccc_v2.1, check.attributes = FALSE) ## [1] TRUE pat1_pccc_v2.0 ##  ## Comorbidities via pccc_v2.0 ##  ##   congeni_genetic cvd gi hemato_immu malignancy metabolic misc neonatal ## 1               0   0  0           0          0         1    0        0 ##   neuromusc renal respiratory any_tech_dep any_transplant num_cmrb cmrb_flag ## 1         1     0           0            1              0        2         1 pat1_pccc_v3.0 <-   comorbidities(data = pat1,        icd.codes = \"code\",        dx.var = \"dx\",        icdv = 9,        method = \"pccc_v3.0\",        flag.method = 'current',        poa = 1   )  pat1_pccc_v3.1 <-   comorbidities(data = pat1,        icd.codes = \"code\",        dx.var = \"dx\",        icdv = 9,        method = \"pccc_v3.1\",        flag.method = 'current',        poa = 1   )  all.equal(pat1_pccc_v3.0, pat1_pccc_v3.1, check.attributes = FALSE) ## [1] TRUE  # retain the needed columns, there are four columns for each condition in v3 pat1_pccc_v3.0[, grep(\"^(cmrb_flag|num_cmrb|neuromus|metabolic|tech_dep_flag)\", names(pat1_pccc_v3.0))] ##   metabolic_dxpr_only metabolic_tech_only metabolic_dxpr_and_tech ## 1                   0                   1                       0 ##   metabolic_dxpr_or_tech neuromusc_dxpr_only neuromusc_tech_only ## 1                      1                   1                   0 ##   neuromusc_dxpr_and_tech neuromusc_dxpr_or_tech num_cmrb cmrb_flag ## 1                       0                      1        2         1 pat2 <- subset(pat1, code != \"3432\") pat2_pccc_v2.1 <-   comorbidities(     data = pat2,     icd.codes = \"code\",     dx.var = \"dx\",     icdv = 9,     method = \"pccc_v2.1\",     flag.method = 'current',     poa = 1   ) Filter(f = function(x) x > 0, pat2_pccc_v2.1) ##   metabolic any_tech_dep num_cmrb cmrb_flag ## 1         1            1        1         1 pat2_pccc_v3.1 <-   comorbidities(     data = pat2,     icd.codes = \"code\",     dx.var = \"dx\",     icdv = 9,     method = \"pccc_v3.1\",     flag.method = 'current',     poa = 1   ) Filter(f = function(x) x > 0, pat2_pccc_v3.1) ## data frame with 0 columns and 1 row"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"expected-data-structures","dir":"Articles","previous_headings":"","what":"Expected Data Structures","title":"Pediatric Complex Chronic Conditions","text":"expected input data format comorbidities “long” format. mandatory column one column ICD codes. codes can full codes (include decimal point) compact codes (omitting decimal point). Additionally, column(s) identifying patients, encounters, important groups encouraged. column indicate ICD version (9 10), another column identifying code diagnostic procedure code also encouraged. example mdcr data set three columns, patient id (patid), ICD compact codes (code), column indicate ICD code diagnostic procedure code, (dx: 1 diagnostic, 0 procedure). mdcr data provided columns patient id, ICD version, compact code, diagnostic/procedure indicator. Applying pccc_v2.1 pccc_v3.1 methods mdcr simple : useful summary object returned comorbidities gained calling summary(). return data.table columns count percentages. pccc_v2.0 pccc_v2.1 condition, label, count, percentage, reported. pccc_v3.0 pccc_v3.1 columns extended provide counts percentages dxpr_or_tech, dxpr_only, tech_only, dxpr_and_tech. summary tables data.frames can manipulated end user reporting want, see following table. Summary Table mdcr_results_v2.1_01 mdcr_results_v3.1_01. additional details consider respect ICD codes. ICD version, 9 10, code diagnostic procedure code. example, code ICD-9 diagnostic code 332.1 compact code ICD-9 procedure code 33.21, 3321. case mdcr data compact codes, need distinguish ICD-9 diagnostic ICD-9 procedure critically important. mdcr data code 3321 appear diagnostic procedure. account diagnostic procedure status codes specify value dx.var argument. Specificity increased using diagnostic/procedure flag. Using pccc_v2.1 278 false positive flags diagnostic/procedure flag omitted comorbidities call. Using pccc_v3.1 256 false positive flags diagnostic/procedure flag omitted comorbidities call. Let’s explore record patient 87420. , compact code “5641” matches procedure code 56.41 renal condition. mdcr_results_v2.1_01 mdcr_results_v3.1_01 distinction made diagnostic procedure codes patient flagged renal condition. However, reviewing patient record, compact code “5641” listed diagnostic criteria full code 564.1 Irritable bowel syndrome. example discriminating diagnostic procedure codes critically important looking complex chronic conditions. explicitly look inner join patient’s data pccc lookup table see code 5641 matches procedure code pccc lookup table. accounting diagnostic procedure codes, overlaps two coding structures can lead false positives. Using full codes can prevent false positives . several different ways comorbidities() called resulting different outcomes. Note: good example medicalcoder can handle full compact codes within single record. Another consideration version ICD, 9 10. record patid 95471 great example problem compact code can cause. “E030” matches ICD-9 dx compact full code E030 (decimal point), matches ICD-10 dx compact code full code E03.0 ICD-10 version related chronic complex condition. Inputs comorbidities() call ICD version impact output. calling comorbidities() variable indicate ICD version NA values joined codes ignored resulting condition flagged. know want compare ICD-9 ICD-10 values using icdv argument can simplify call case, condition ICD-9 condition flagged ICD-10. Lastly, noted lot ambiguity resulting compact codes can avoided full codes available. medicalcoder can handle forms. example use “E030” assess full compact codes (default), full codes, lastly compact codes. Note example specifying ICD version diagnostic/procedure status code. information “E030” ICD-9 ICD-10, full compact, (can diagnostic code either ICD-9 ICD-10) get different flags. default, liberal approach flags example patient condition cases. considering code full code, ICD-10 version matches. considering compact codes flag true ambiguous version ICD-9 full version since ICD-9 E030 full code compact form.","code":"head(mdcr) ##   patid icdv  code dx ## 1 71412    9 99931  1 ## 2 71412    9 75169  1 ## 3 71412    9 99591  1 ## 4 71412    9 V5865  1 ## 5 71412    9  V427  1 ## 6 17087   10  V441  1 str(mdcr) ## 'data.frame':    319856 obs. of  4 variables: ##  $ patid: int  71412 71412 71412 71412 71412 17087 64424 64424 84361 84361 ... ##  $ icdv : int  9 9 9 9 9 10 9 9 9 9 ... ##  $ code : chr  \"99931\" \"75169\" \"99591\" \"V5865\" ... ##  $ dx   : int  1 1 1 1 1 1 1 0 1 1 ... mdcr_results_v2.1_01 <-   comorbidities(data = mdcr,        icd.codes = \"code\",        id.vars = \"patid\",        poa = 1,        flag.method = 'current',        method = \"pccc_v2.1\")  mdcr_results_v3.1_01 <-   comorbidities(data = mdcr,        icd.codes = \"code\",        id.vars = \"patid\",        poa = 1,        flag.method = 'current',        method = \"pccc_v3.1\") str(summary(mdcr_results_v2.1_01)) ## 'data.frame':    24 obs. of  4 variables: ##  $ condition: chr  \"congeni_genetic\" \"cvd\" \"gi\" \"hemato_immu\" ... ##  $ label    : chr  \"Other Congenital or Genetic Defect\" \"Cardiovascular\" \"Gastrointestinal\" \"Hematologic or Immunologic\" ... ##  $ count    : int  3490 5034 6946 2887 4057 3348 1079 1572 5968 3033 ... ##  $ percent  : num  9.12 13.16 18.15 7.55 10.6 ... str(summary(mdcr_results_v3.1_01)) ## 'data.frame':    24 obs. of  10 variables: ##  $ condition            : chr  \"congeni_genetic\" \"cvd\" \"gi\" \"hemato_immu\" ... ##  $ label                : chr  \"Other Congenital or Genetic Defect\" \"Cardiovascular\" \"Gastrointestinal\" \"Hematologic or Immunologic\" ... ##  $ dxpr_or_tech_count   : int  3225 5185 5808 2943 4075 3466 774 1529 5917 2933 ... ##  $ dxpr_or_tech_percent : num  8.43 13.55 15.18 7.69 10.65 ... ##  $ dxpr_only_count      : int  3225 4526 1520 2943 4075 3415 126 1529 4605 1991 ... ##  $ dxpr_only_percent    : num  8.43 11.83 3.97 7.69 10.65 ... ##  $ tech_only_count      : int  0 318 3897 0 0 40 647 0 359 580 ... ##  $ tech_only_percent    : num  0 0.831 10.185 0 0 ... ##  $ dxpr_and_tech_count  : int  0 341 391 0 0 11 1 0 953 362 ... ##  $ dxpr_and_tech_percent: num  0 0.891 1.022 0 0 ... x <-   merge(     summary(mdcr_results_v2.1_01),     summary(mdcr_results_v3.1_01),     all = TRUE,     by = c(\"condition\", \"label\"),     sort = FALSE   ) x[[\"condition\"]] <- NULL pccc_codes[pccc_codes$code == \"3321\", ] ##      icdv dx full_code code   condition              subcondition ## 59      9  0     33.21 3321 respiratory device_and_technology_use ## 1460    9  1     332.1 3321   neuromusc         movement_diseases ##      transplant_flag tech_dep_flag pccc_v3.1 pccc_v3.0 pccc_v2.1 pccc_v2.0 ## 59                 0             1         1         1         1         1 ## 1460               0             0         1         1         1         1 table(mdcr[mdcr$code == \"3321\", \"dx\"]) ##  ##  0  1  ## 77  1 mdcr_results_v2.1_02 <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icd.codes = \"code\",     dx.var = \"dx\",     flag.method = 'current',     poa = 1,     method = \"pccc_v2.1\"   )  mdcr_results_v3.1_02 <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icd.codes = \"code\",     dx.var = \"dx\",     flag.method = 'current',     poa = 1,     method = \"pccc_v3.1\"   ) # verify that the cmrb_flag and number of conditions is the same or less after # accounting for the diagnostic/procedure flag in the comorbidities call stopifnot(all(mdcr_results_v2.1_02$cmrb_flag <= mdcr_results_v2.1_01$cmrb_flag)) stopifnot(all(mdcr_results_v2.1_02$num_cmrb  <= mdcr_results_v2.1_01$num_cmrb))  sum(mdcr_results_v2.1_02$cmrb_flag != mdcr_results_v2.1_01$cmrb_flag) ## [1] 278 sum(mdcr_results_v2.1_02$num_cmrb  != mdcr_results_v2.1_01$num_cmrb) ## [1] 989  stopifnot(all(mdcr_results_v3.1_02$cmrb_flag <= mdcr_results_v3.1_01$cmrb_flag)) stopifnot(all(mdcr_results_v3.1_02$num_cmrb  <= mdcr_results_v3.1_01$num_cmrb))  sum(mdcr_results_v3.1_02$cmrb_flag != mdcr_results_v3.1_01$cmrb_flag) ## [1] 256 sum(mdcr_results_v3.1_02$num_cmrb  != mdcr_results_v3.1_01$num_cmrb) ## [1] 923 subset(mdcr, patid == \"87420\") ##      patid icdv  code dx ## 4073 87420    9 78321  1 ## 4074 87420    9  5641  1 subset(get_pccc_codes(), code %in% c(\"78321\", \"5641\")) ##     icdv dx full_code code condition subcondition transplant_flag tech_dep_flag ## 192    9  0     56.41 5641     renal        other               0             0 ##     pccc_v3.1 pccc_v3.0 pccc_v2.1 pccc_v2.0 ## 192         1         1         1         1 subset(mdcr_results_v2.1_01, patid == \"87420\", select = c(\"cmrb_flag\", \"renal\")) ##       cmrb_flag renal ## 32849         1     1 subset(mdcr_results_v2.1_02, patid == \"87420\", select = c(\"cmrb_flag\", \"renal\")) ##       cmrb_flag renal ## 32849         0     0  subset(mdcr_results_v3.1_01, patid == \"87420\", select = c(\"cmrb_flag\", \"renal_dxpr_or_tech\")) ##       cmrb_flag renal_dxpr_or_tech ## 32849         1                  1 subset(mdcr_results_v3.1_02, patid == \"87420\", select = c(\"cmrb_flag\", \"renal_dxpr_or_tech\")) ##       cmrb_flag renal_dxpr_or_tech ## 32849         0                  0  subset(get_icd_codes(with.descriptions = TRUE), full_code %in% c(\"56.41\", \"564.1\")) ##       icdv dx full_code code src known_start known_end assignable_start ## 12530    9  1     564.1 5641 cms        1997      2015             1997 ## 12531    9  1     564.1 5641 cms        1997      2015             1997 ## 12532    9  0     56.41 5641 cms        1997      2015             1997 ##       assignable_end                     desc desc_start desc_end ## 12530           2015          Irritable colon       1997     1999 ## 12531           2015 Irritable bowel syndrome       2001     2015 ## 12532           2015     Partial ureterectomy       1997     2015 merge(x = subset(mdcr, patid == \"87420\"),       y = pccc_codes,       by.x = c(\"code\"),       by.y = c(\"code\"),       suffixes = c(\".mdcr\", \".pccc_codes\") ) ##   code patid icdv.mdcr dx.mdcr icdv.pccc_codes dx.pccc_codes full_code ## 1 5641 87420         9       1               9             0     56.41 ##   condition subcondition transplant_flag tech_dep_flag pccc_v3.1 pccc_v3.0 ## 1     renal        other               0             0         1         1 ##   pccc_v2.1 pccc_v2.0 ## 1         1         1 DF <- data.frame(id = c(\"full dx\", \"full pr\", \"compact dx\", \"compact pr\"),                  code = c(\"564.1\", \"56.41\", \"5641\", \"5641\"),                  dx = c(1, 0, 1, 0))  # ideal: using the dx/pr status and matching on full and compact codes. comorbidities(   data = DF,   id.vars = \"id\",   dx.var = \"dx\",   icd.codes = \"code\",   poa = 1,   method = \"pccc_v3.1\" )[, c(\"id\", \"cmrb_flag\", \"renal_dxpr_or_tech\")] ##           id cmrb_flag renal_dxpr_or_tech ## 1 compact dx         0                  0 ## 2 compact pr         1                  1 ## 3    full dx         0                  0 ## 4    full pr         1                  1  # false positive for the compact dx comorbidities(   data = DF,   id.vars = \"id\",   icd.codes = \"code\",   poa = 1,   method = \"pccc_v3.1\" )[, c(\"id\", \"cmrb_flag\", \"renal_dxpr_or_tech\")] ##           id cmrb_flag renal_dxpr_or_tech ## 1 compact dx         1                  1 ## 2 compact pr         1                  1 ## 3    full dx         0                  0 ## 4    full pr         1                  1  # false negative for compact pr comorbidities(   data = DF,   id.vars = \"id\",   icd.codes = \"code\",   poa = 1,   full.code = TRUE,   compact.codes = FALSE,   method = \"pccc_v3.1\" )[, c(\"id\", \"cmrb_flag\", \"renal_dxpr_or_tech\")] ##           id cmrb_flag renal_dxpr_or_tech ## 1 compact dx         0                  0 ## 2 compact pr         0                  0 ## 3    full dx         0                  0 ## 4    full pr         1                  1  # false positive for compact dx comorbidities(   data = DF,   id.vars = \"id\",   icd.codes = \"code\",   poa = 1,   full.code = FALSE,   compact.codes = TRUE,   method = \"pccc_v3.1\" )[, c(\"id\", \"cmrb_flag\", \"renal_dxpr_or_tech\")] ##           id cmrb_flag renal_dxpr_or_tech ## 1 compact dx         1                  1 ## 2 compact pr         1                  1 ## 3    full dx         0                  0 ## 4    full pr         0                  0  # false negatives for compact and full pr comorbidities(   data = DF,   id.vars = \"id\",   icd.codes = \"code\",   dx.var = \"dx\",   poa = 1,   full.code = FALSE,   compact.codes = TRUE,   method = \"pccc_v3.1\" )[, c(\"id\", \"cmrb_flag\", \"renal_dxpr_or_tech\")] ##           id cmrb_flag renal_dxpr_or_tech ## 1 compact dx         0                  0 ## 2 compact pr         1                  1 ## 3    full dx         0                  0 ## 4    full pr         0                  0 subset(mdcr, patid == \"95471\") ##        patid icdv code dx ## 125330 95471   10 E030  1  # no flag becuse icdv = 9 which treats all input codes as ICD-9 comorbidities(   data = subset(mdcr, patid == \"95471\"),   icd.codes = \"code\",   id.vars = 'patid',   dx.var = \"dx\",   icdv = 9L,   poa = 1,   method = \"pccc_v3.1\" )[, c('patid', 'cmrb_flag')] ##   patid cmrb_flag ## 1 95471         0  # flag because icdv = 10 - same as using `icdv.var = \"icdv\"` comorbidities(   data = subset(mdcr, patid == \"95471\"),   icd.codes = \"code\",   id.vars = 'patid',   dx.var = \"dx\",   icdv = 10L,   poa = 1,   method = \"pccc_v3.1\" )[, c('patid', 'cmrb_flag')] ##   patid cmrb_flag ## 1 95471         1  comorbidities(   data = subset(mdcr, patid == \"95471\"),   icd.codes = \"code\",   id.vars = 'patid',   dx.var = \"dx\",   icdv.var = \"icdv\",   poa = 1,   method = \"pccc_v3.0\" )[, c('patid', 'cmrb_flag')] ##   patid cmrb_flag ## 1 95471         1 lookup_icd_codes(\"E030\") ##   input_code   match_type icdv dx full_code code src known_start known_end ## 1       E030    full_code    9  1      E030 E030 cms        2010      2015 ## 2       E030 compact_code   10  1     E03.0 E030 who        2008      2019 ## 3       E030 compact_code   10  1     E03.0 E030 cdc        2001      2025 ## 4       E030 compact_code   10  1     E03.0 E030 cms        2014      2026 ##   assignable_start assignable_end ## 1             2010           2015 ## 2             2008           2019 ## 3             2001           2025 ## 4             2014           2026 data <- data.frame(id = c(\"Ambiguous compact code\", \"Full ICD-9 code\", \"Full ICD-10 code\"),                    code  = c(\"E030\", \"E030\", \"E03.0\")) data ##                       id  code ## 1 Ambiguous compact code  E030 ## 2        Full ICD-9 code  E030 ## 3       Full ICD-10 code E03.0  args <-   list(     data = data,     id.vars = \"id\",     icd.codes = \"code\",     poa = 1,     method = \"pccc_v3.1\"   )  default <-   do.call(comorbidities, c(args, list(full.codes = TRUE,  compact.codes = TRUE ))) full_only <-   do.call(comorbidities, c(args, list(full.codes = TRUE,  compact.codes = FALSE))) compact_only <-   do.call(comorbidities, c(args, list(full.codes = FALSE, compact.codes = TRUE )))  default[,       c(\"id\", \"cmrb_flag\")] ##                       id cmrb_flag ## 1 Ambiguous compact code         1 ## 2       Full ICD-10 code         1 ## 3        Full ICD-9 code         1 full_only[,     c(\"id\", \"cmrb_flag\")] ##                       id cmrb_flag ## 1 Ambiguous compact code         0 ## 2       Full ICD-10 code         1 ## 3        Full ICD-9 code         0 compact_only[,  c(\"id\", \"cmrb_flag\")] ##                       id cmrb_flag ## 1 Ambiguous compact code         1 ## 2       Full ICD-10 code         0 ## 3        Full ICD-9 code         1"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"longitudinal-conditions","dir":"Articles","previous_headings":"","what":"Longitudinal Conditions","title":"Pediatric Complex Chronic Conditions","text":"medicalcoder package includes example data set, mdcr_longitudinal, ICD-9 ICD-10 codes 3 synthetic patients multiple encounters. row date (encounter) ICD code reported. Let’s look pccc_v2.1 flags patient, using information encounters. can easily done specifying id.vars = c(\"patid\") comorbidities method considers call codes occurring one encounter. can look conditions flagged encounter specifying id.vars = c(\"patid\", \"date\"). Looking patid 9663901 encounter level see conditions occur different moments time condition patient change overtime. chronic conditions, condition observed, considered exist perpetuity. pccc_v2.1 simple carry-forward method can applied data set mark presence condition time reporting thereafter. pccc_v3.0 pccc_v3.1 simple carry-forward method easy use information technology dependent codes omitted non-technology dependent codes exist. Let’s use three ICD-10 diagnostic codes example explore six possible permutations codes. ’ll generate data set seven encounters one code appearing encounters 2, 4, 6. codes ’ll use : * H49.811: metabolic (metabolic disorders), * J84.111: respiratory (chronic respiratory diseases), * Z96.41: metabolic (device technology use). constructed data permutations : Permutation 1: H49.811, J84.111, Z96.41 Permutation 2: H49.811, Z96.41, J84.111 Permutation 3: J84.111, H49.811, Z96.41 Permutation 4: J84.111, Z96.41, H49.811 Permutation 5: Z96.41, H49.811, J84.111 Permutation 6: Z96.41, J84.111, H49.811 ’ll apply pccc_v3.1 code set flag.method = \"cumulative\" codes considered present--admission. Let’s walk results permutation. Permutation 1 first code appear permutation H49.811, metabolic (). diagnostic code flag metabolic condition encounters 2 7 _dxpr_or_tech. Z96.41 code, metabolic (tech), appears encounter 6. Thus, encounters 2 5 metabolic flagged _dxpr_or_tech = 1, dxpr_only = 1, tech_only = 0, dxpr_and_tech = 0. Encounters 6 7 dxpr_only = 0 tech_only = 0 dxpr_and_tech = 1. J84.111 respiratory non-tech code appearing encounter 4 flag dxpr_or_tech = 1, dxpr_only = 1, tech_only = 0, dxpr_and_tech = 0 encounters 4 7. permutation 1, non-tech dependent metabolic code H49.811 appearing encounter 2 means metabolic flagged encounters 2 7. differ dxpr_only 1 encounters 2 3, dxpr_and_tech flagging encounters 4 7. Lastly, non-tech code J84.111 respiratory condition flagging dxpr_or_tech = dxpr_only = 1 encounters 6 7. Permutation three respiratory flagged encounters 2 7. non-tech metabolic code encounter 4 results flagging metabolic encounters 4 7. Permutation 4 notable presence respiratory condition encounters 2 7 means technology dependent metabolic code appears encounter 4, metabolic flagged encounters 4 7. Compare permutations 5 6. permutation 5 first code tech dependent metabolic code encounter 2. code flagging condition technology dependent code PCCC version 3 algorithm results condition flagged encounters 2 3. encounter 4, non-tech metabolic code appears metabolic condition flagged past history technology dependent code persists. permutation 5, since code record encounter 2 3 technology dependent metabolic code, flagged condition. encounter 4, dxpr code respiratory condition reported respiratory condition metabolic condition flagged technology dependent. Note technology conditions flagged least one condition flagged.","code":"head(mdcr_longitudinal) ##     patid       date icdv     code ## 1 9663901 2016-03-18   10   Z77.22 ## 2 9663901 2016-03-24   10  IMO0002 ## 3 9663901 2016-03-24   10 V87.7XXA ## 4 9663901 2016-03-25   10  J95.851 ## 5 9663901 2016-03-30   10  IMO0002 ## 6 9663901 2016-03-30   10    Z93.0 longitudinal_v2_patid <-   comorbidities(data = mdcr_longitudinal,        icd.codes = \"code\",        id.vars = c(\"patid\"),        icdv.var = \"icdv\",        method = \"pccc_v2.1\",        flag.method = \"current\",        poa = 1   ) kableExtra::kbl(longitudinal_v2_patid) longitudinal_v2_patid_date <-   comorbidities(data = mdcr_longitudinal,        icd.codes = \"code\",        id.vars = c(\"patid\", \"date\"),        icdv.var = \"icdv\",        method = \"pccc_v2.1\",        flag.method = \"current\",        poa = 1) kableExtra::kbl(   subset(longitudinal_v2_patid_date, patid == \"9663901\"),   row.names = FALSE ) longitudinal_v2_patid_date_cumulative_poa0 <-   comorbidities(     data = mdcr_longitudinal,     icd.codes = \"code\",     id.vars = c(\"patid\", \"date\"),     icdv.var = \"icdv\",     method = \"pccc_v2.1\",     flag.method = \"cumulative\",     poa = 0   )  kableExtra::kbl(   subset(longitudinal_v2_patid_date_cumulative_poa0, patid == \"9663901\"),   row.names = FALSE ) longitudinal_v2_patid_date_cumulative_poa1 <-   comorbidities(     data = mdcr_longitudinal,     icd.codes = \"code\",     id.vars = c(\"patid\", \"date\"),     icdv.var = \"icdv\",     method = \"pccc_v2.1\",     flag.method = \"cumulative\",     poa = 1   ) kableExtra::kbl(   subset(longitudinal_v2_patid_date_cumulative_poa1, patid == \"9663901\"),   row.names = FALSE ) codes <- c(\"H49.811\", \"J84.111\", \"Z96.41\") subset(get_pccc_codes(), full_code %in% codes) ##      icdv dx full_code   code   condition                 subcondition ## 6445   10  1   H49.811 H49811   metabolic    other_metabolic_disorders ## 6712   10  1   J84.111 J84111 respiratory chronic_respiratory_diseases ## 7905   10  1    Z96.41  Z9641   metabolic    device_and_technology_use ##      transplant_flag tech_dep_flag pccc_v3.1 pccc_v3.0 pccc_v2.1 pccc_v2.0 ## 6445               0             0         1         1         1         1 ## 6712               0             0         1         1         0         0 ## 7905               0             1         1         1         1         1 permutations <-   data.table::data.table(     permutation = rep(1:6, each = 7),     encounter_id = rep(1:7, times = 6),     code =       codes[c(NA, 1, NA, 2, NA, 3, NA,               NA, 1, NA, 3, NA, 2, NA,               NA, 2, NA, 1, NA, 3, NA,               NA, 2, NA, 3, NA, 1, NA,               NA, 3, NA, 1, NA, 2, NA,               NA, 3, NA, 2, NA, 1, NA)]   )  permutations[, plabel := paste(na.omit(code), collapse = \", \"), by = .(permutation)] permutations[, plabel := paste0(\"Permutation \", permutation, \": \", plabel)] str(permutations, vec.len = 1) ## Classes 'data.table' and 'data.frame':   42 obs. of  4 variables: ##  $ permutation : int  1 1 ... ##  $ encounter_id: int  1 2 ... ##  $ code        : chr  NA ... ##  $ plabel      : chr  \"Permutation 1: H49.811, J84.111, Z96.41\" ... ##  - attr(*, \".internal.selfref\")=<externalptr> rtn <-   comorbidities(     data = permutations,     icd.codes = \"code\",     id.vars = c(\"permutation\", \"plabel\", \"encounter_id\"),     icdv = 10L,     compact.codes = FALSE,     method = \"pccc_v3.1\",     flag.method = \"cumulative\",     poa = 1   )"},{"path":"http://www.peteredewitt.com/medicalcoder/articles/pccc.html","id":"subconditions","dir":"Articles","previous_headings":"","what":"Subconditions","title":"Pediatric Complex Chronic Conditions","text":"documentation PCCC version 2 (Feudtner et al. 2014) version 3 (Feinstein et al. 2024) include subconditions major conditions. However, knowledge, software prior medicalcoder implemented flagging subconditions. subconditions condition shown next table. get subconditions need use subconditions = TRUE argument comorbidities call. example apply pccc_v3.1 without comorbidities. structure return object with_subconditions list two elements. first element, conditions, identical results calling comorbidities() subconditions = FALSE. second element with_subconditions list data.frames, one condition, indicators condition. quick easy way get summary subconditions call summary(). subconditions available pccc variants. summary presented following table. longitudinal assessment subconditions work well. Using permutations data set look metabolic respiratory conditions subconditions. Let’s start looking respiratory results. subcondition , , flagged chronic respiratory diseases. reminder: data.frame subcondition report rows primary condition flagged. see following encounters chronic respiratory disease flagged consistent primary respiratory condition flagged. Encounters flagging respiratory condition chronic respiratory disease subcondition. metabolic condition two subconditions look , 1) device technology use, 2) metabolic disorders. Encounters flagging metabolic condition encounters flagging subconidtions device technology use /metabolic disorders.","code":"without_subconditions <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icd.codes = \"code\",     icdv.var = \"icdv\",     dx.var = \"dx\",     poa = 1,     method = \"pccc_v3.1\",     subconditions = FALSE   )  with_subconditions <-   comorbidities(     data = mdcr,     id.vars = \"patid\",     icd.codes = \"code\",     icdv.var = \"icdv\",     dx.var = \"dx\",     poa = 1,     method = \"pccc_v3.1\",     subconditions = TRUE   ) with_subconditions ##  ## Comorbidities and Subconditions via pccc_v3.1 ##  ## List of 2 ##  $ conditions   :'data.frame':   38262 obs. of  49 variables: ##  $ subconditions:List of 11 ##   ..$ congeni_genetic:'data.frame':  3225 obs. of  5 variables: ##   ..$ cvd            :'data.frame':  5122 obs. of  9 variables: ##   ..$ gi             :'data.frame':  5602 obs. of  7 variables: ##   ..$ hemato_immu    :'data.frame':  2832 obs. of  13 variables: ##   ..$ malignancy     :'data.frame':  3784 obs. of  3 variables: ##   ..$ metabolic      :'data.frame':  3109 obs. of  8 variables: ##   ..$ misc           :'data.frame':  762 obs. of  3 variables: ##   ..$ neonatal       :'data.frame':  1516 obs. of  9 variables: ##   ..$ neuromusc      :'data.frame':  5826 obs. of  11 variables: ##   ..$ renal          :'data.frame':  2768 obs. of  7 variables: ##   ..$ respiratory    :'data.frame':  3200 obs. of  7 variables:  all.equal(with_subconditions$conditions,           without_subconditions,           check.attributes = FALSE) ## [1] TRUE str(   summary(with_subconditions) ) ## 'data.frame':    82 obs. of  5 variables: ##  $ condition                      : chr  \"congeni_genetic\" \"congeni_genetic\" \"congeni_genetic\" \"congeni_genetic\" ... ##  $ subcondition                   : chr  NA \"bone_and_joint_anomalies\" \"chromosomal_anomalies\" \"diaphragm_and_abdominal_wall_anomalies\" ... ##  $ count                          : num  3225 825 1544 300 754 ... ##  $ percent_of_cohort              : num  8.429 2.156 4.035 0.784 1.971 ... ##  $ percent_of_those_with_condition: num  NA 25.6 47.9 9.3 23.4 ... rslts <-   comorbidities(     data = permutations,     icd.codes = \"code\",     id.vars = c(\"permutation\", \"plabel\", \"encounter_id\"),     icdv = 10L,     compact.codes = FALSE,     method = \"pccc_v3.1\",     flag.method = \"cumulative\",     poa = 1,     subconditions = TRUE   ) all(rslts$subconditions$respiratory$chronic_respiratory_diseases == 1) ## [1] TRUE sapply(rslts$subconditions$respiratory[, -(1:3)], max) ## chronic_respiratory_diseases              cystic_fibrosis  ##                            1                            0  ##    device_and_technology_use                        other  ##                            0                            0  ##    respiratory_malformations              transplantation  ##                            0                            0  # which encounters flag for primary condition respiratory? cnd <-   rslts$conditions[     respiratory_dxpr_or_tech == 1,     .(cencid = paste(encounter_id, collapse = \", \")),     by = .(plabel)   ]   # which encounters flag for the subcondition chronic_respiratory_diseases? scnd <-   rslts$subconditions$respiratory[     ,     .(sencid = paste(encounter_id, collapse = \", \")),     by = .(plabel)   ] # which encounters flag for primary condition metabolic? cnd <-   rslts$conditions[     metabolic_dxpr_or_tech == 1,     .(cencid = paste(encounter_id, collapse = \", \")),     by = .(plabel)   ]  # which encounters flag for the subconditions? scnd <-   data.table::melt(     rslts$subconditions$metabolic,     id.vars = c(\"plabel\", \"encounter_id\"),     measure.vars = c(\"device_and_technology_use\", \"other_metabolic_disorders\"),     variable.factor = FALSE,     variable.name = \"subcondition\"   ) scnd <- scnd[value == 1] scnd <-   scnd[     ,     .(sencid = paste(encounter_id, collapse = \", \")),     by = .(plabel, subcondition)   ]  scnd <-   data.table::dcast(     scnd,     plabel ~ subcondition,     value.var = \"sencid\"   )"},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter DeWitt. Author, maintainer. Tell Bennett. Contributor. Seth Russell. Contributor. Meg Rebull. Contributor.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeWitt P (2025). medicalcoder: Tools Working ICD Codes Comorbidity Algorithms. R package version 0.6.0.9000, http://www.peteredewitt.com/medicalcoder/.","code":"@Manual{,   title = {medicalcoder: Tools for Working with ICD Codes and Comorbidity Algorithms},   author = {Peter DeWitt},   year = {2025},   note = {R package version 0.6.0.9000},   url = {http://www.peteredewitt.com/medicalcoder/}, }"},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"medicalcoder-an-r-package-for-working-with-icd-codes-and-comorbidity-algorithms-","dir":"","previous_headings":"","what":"Tools for Working with ICD Codes and Comorbidity Algorithms","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"medicalcoder lightweight, base-R package working ICD-9 ICD-10 diagnosis procedure codes. provides fast, dependency-free tools look , validate, manipulate ICD codes, also implementing widely used comorbidity algorithms Charlson, Elixhauser, Pediatric Complex Chronic Conditions (PCCC). Designed portability reproducibility, package avoids external dependencies—requiring R ≥ 3.5.0—yet offers rich set curated ICD code libraries United States’ Centers Medicare Medicaid Services (CMS), Centers Disease Control (CDC), World Health Organization (). package balances performance elegance: internal caching, efficient joins, compact data structures make practical large-scale health data analyses, clean design makes easy extend audit. Whether need flag comorbidities, explore ICD hierarchies, standardize clinical coding workflows, medicalcoder provides robust, transparent foundation research applied work biomedical informatics. primary objectives medicalcoder : dependencies base R. Requires R version ≥ 3.5.0 due change data serialization. R 3.5.0 released April 2018. initial public release medicalcoder 2025. Several packages listed Suggests section DESCRIPTION file. needed building vignettes, documentation, testing. required install package. medicalcoder import non-base namespaces. improves ease maintenance usability. Suggested packages needed development work building vignettes. required installation use. said, non-trivial performance gains passing data.table comorbidities() function compared passing base data.frame tibble tidyverse. (See benchmarking). required data included package. .tar.gz source file R ≥ 3.5.0, need install use package. Implements three general algorithms, multiple variants. Details provided . Supports flagging subconditions within PCCC. Supports longitudinal flagging comorbidities. medicalcoder flag comorbidities based present--admission indicators current encounter can look back time patient flag comorbidity reported prior encounter. See examples. Lookup tables. Ability work full codes (ICD codes decimal points) compact codes (ICD codes decimal points omitted).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"why-use-medicalcoder","dir":"","previous_headings":"","what":"Why use medicalcoder","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"several tools working ICD codes comorbidity algorithms. medicalcoder provides novel features: Unified access multiple comorbidity algorithms single function: comorbidities(). Support ICD-9 ICD-10 diagnostic procedure codes. Longitudinal patient-level comorbidity flagging using present--admission indicators. Fully self-contained package (external dependencies).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"benchmarking","dir":"","previous_headings":"","what":"Benchmarking","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"major factors impacting expected computation time applying comorbidity algorithm data set : Data size: number subjects/encounters. Data storage class: medicalcoder built imports namespaces required. said, data.table passed comorbidities() data.table namespace available, S3 dispatch merge used, along methods, reduce memory use reduce computation time. flag.method: “current” take less time “cumulative” method. Details benchmarking method, summary graphics, tables, can found medicalcoder GitHub benchmarking directory.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"cran","dir":"","previous_headings":"Install","what":"CRAN","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"","code":"install.packages(\"medicalcoder\")"},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"from-github","dir":"","previous_headings":"Install","what":"From GitHub","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"","code":"remotes::install_github(\"dewittpe/medicalcoder\")"},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"from-source","dir":"","previous_headings":"Install","what":"From source","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":".tar.gz file version X.Y.Z, e.g., medicalcoder_X.Y.Z.tar.gz can install within R via: command line:","code":"install.packages(   pkgs = \"medicalcoder_X.Y.Z.tar.gz\", # replace file name with the file you have   repos = NULL,   type = \"source\" ) R CMD INSTALL medicalcoder_X.Y.Z.tar.gz"},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"comorbidity-algorithms","dir":"","previous_headings":"Tools:","what":"Comorbidity Algorithms","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"Pediatric Complex Chronic Conditions (PCCC) BMC Pediatrics: Feudtner et al. (2014) Consistent R package pccc Updated code base assessment algorithm version 2.0. JAMA Network Open: Feinstein et al. (2024) Children’s Hospital Association Toolkit Updated code base assessment algorithm version 3.0. Charlson Comorbidities Deyo, Cherkin, Ciol (1992) Quan et al. (2005) Quan et al. (2011) Glasheen (2019) Elixhauser Comorbidities Elixhauser et al. (1998) Quan et al. (2005) ICD-9 codes ICD-10 codes methods available function call comorbidities(). support age scores Charlson, present admission flags methods, support longitudinal data. See examples vignettes.","code":"vignette(topic = \"comorbidities\", package = \"medicalcoder\") vignette(topic = \"pccc\", package = \"medicalcoder\") vignette(topic = \"charlson\", package = \"medicalcoder\") vignette(topic = \"elixhauser\", package = \"medicalcoder\")"},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"example-data","dir":"","previous_headings":"Tools:","what":"Example Data","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"Input data comorbidities() expected ‘long’ format. row one code additional columns patient /encounter id.","code":"data(mdcr, mdcr_longitudinal, package = \"medicalcoder\") str(mdcr) #> 'data.frame':    319856 obs. of  4 variables: #>  $ patid: int  71412 71412 71412 71412 71412 17087 64424 64424 84361 84361 ... #>  $ icdv : int  9 9 9 9 9 10 9 9 9 9 ... #>  $ code : chr  \"99931\" \"75169\" \"99591\" \"V5865\" ... #>  $ dx   : int  1 1 1 1 1 1 1 0 1 1 ... head(mdcr) #>   patid icdv  code dx #> 1 71412    9 99931  1 #> 2 71412    9 75169  1 #> 3 71412    9 99591  1 #> 4 71412    9 V5865  1 #> 5 71412    9  V427  1 #> 6 17087   10  V441  1 head(mdcr_longitudinal) #>     patid       date icdv     code #> 1 9663901 2016-03-18   10   Z77.22 #> 2 9663901 2016-03-24   10  IMO0002 #> 3 9663901 2016-03-24   10 V87.7XXA #> 4 9663901 2016-03-25   10  J95.851 #> 5 9663901 2016-03-30   10  IMO0002 #> 6 9663901 2016-03-30   10    Z93.0"},{"path":"http://www.peteredewitt.com/medicalcoder/index.html","id":"icd","dir":"","previous_headings":"Tools:","what":"ICD","title":"Tools for Working with ICD Codes and Comorbidity Algorithms","text":"package contains internal data sets references ICD-9 ICD-10 US based diagnostic procedure codes. codes supplemented additional codes World Health Organization. can get table ICD codes via get_icd_codes(). columns : icdv: integer value 9 10; ICD-9 ICD-10 dx: integer 0 1; 0 = procedure code, 1 = diagnostic code full_code: character string ICD code appropriate decimal point. code: characters string compact ICD code, , ICD code without decimal point, e.g., full code C00.1 compact code form C001. src: character string denoting source ICD code information. cms: ICD-9-CM, ICD-9-PCS, ICD-10-CM, ICD-10-PCS codes curated Centers Medicare Medicaid Services (CMS). cdc: CDC mortality coding. : World Health Organization. known_start: earliest (fiscal) year source data code available source code medicalcoder. Codes CMS United States fiscal year. Codes CDC calendar year. United States fiscal year starts October 1 concludes September 30. example, fiscal year 2013 started October 1 2012 concluded September 30 2013. reemphasize year data within medicalcoder. ICD-9-CM, codes went effect fiscal year 1980. source code documented source files codes dating back  known_end: latest (fiscal) year code part ICD system /known within medicalcoder lookup tables. Assignable codes. codes header codes, e.g., ICD-10-CM three-digit code Z94 header code four-digit codes Z94.0, Z94.1, Z94.2, Z94.3, Z94.4, Z94.5, Z94.6, Z94.7, Z94.8, Z94.9 exist. Z94.8 assignable codes five-digit codes initial four-digits exist. Z94.8 header code five-digit codes Z94.81, Z94.82, Z94.83, Z94.84, Z94.89 exist. assignable_start: Earliest (fiscal) year code assignable. assignable_end: Latest (fiscal) year code assignable. Additionally, get_icd_codes() method can provide descriptions ICD hierarchy using .descriptions /.hierarchy arguments. Functions lookup_icd_codes(), is_icd(), icd_compact_to_full() also provided working ICD codes. details examples vignette:","code":"str(medicalcoder::get_icd_codes()) #> 'data.frame':    227534 obs. of  9 variables: #>  $ icdv            : int  9 9 9 9 9 9 9 9 9 9 ... #>  $ dx              : int  0 0 0 0 0 0 1 0 1 0 ... #>  $ full_code       : chr  \"00\" \"00.0\" \"00.01\" \"00.02\" ... #>  $ code            : chr  \"00\" \"000\" \"0001\" \"0002\" ... #>  $ src             : chr  \"cms\" \"cms\" \"cms\" \"cms\" ... #>  $ known_start     : int  2003 2003 2003 2003 2003 2003 1997 2003 1997 2003 ... #>  $ known_end       : int  2015 2015 2015 2015 2015 2015 2015 2015 2015 2015 ... #>  $ assignable_start: int  NA NA 2003 2003 2003 2003 NA NA 1997 2003 ... #>  $ assignable_end  : int  NA NA 2015 2015 2015 2015 NA NA 2015 2015 ... subset(   x = lookup_icd_codes(\"^Z94\", regex = TRUE, full.codes = TRUE, compact.codes = FALSE),   subset = src == \"cms\",   select = c(\"full_code\", \"known_start\", \"known_end\", \"assignable_start\", \"assignable_end\") ) #>    full_code known_start known_end assignable_start assignable_end #> 1        Z94        2014      2026               NA             NA #> 5      Z94.0        2014      2026             2014           2026 #> 9      Z94.1        2014      2026             2014           2026 #> 14     Z94.2        2014      2026             2014           2026 #> 17     Z94.3        2014      2026             2014           2026 #> 22     Z94.4        2014      2026             2014           2026 #> 25     Z94.5        2014      2026             2014           2026 #> 29     Z94.6        2014      2026             2014           2026 #> 33     Z94.7        2014      2026             2014           2026 #> 38     Z94.8        2014      2026               NA             NA #> 41    Z94.81        2014      2026             2014           2026 #> 42    Z94.82        2014      2026             2014           2026 #> 43    Z94.83        2014      2026             2014           2026 #> 44    Z94.84        2014      2026             2014           2026 #> 45    Z94.89        2014      2026             2014           2026 #> 46     Z94.9        2014      2026             2014           2026 vignette(topic = \"icd\", package = \"medicalcoder\")"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":null,"dir":"Reference","previous_headings":"","what":"Comorbidities — comorbidities","title":"Comorbidities — comorbidities","text":"Apply established comorbidity algorithms ICD-coded data. Supported methods include several variants Charlson comorbidity system, Elixhauser, Pediatric Complex Chronic Conditions (PCCC).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comorbidities — comorbidities","text":"","code":"comorbidities(   data,   icd.codes,   method,   id.vars = NULL,   icdv.var = NULL,   icdv = NULL,   dx.var = NULL,   dx = NULL,   poa.var = NULL,   poa = NULL,   age.var = NULL,   primarydx.var = NULL,   primarydx = NULL,   flag.method = c(\"current\", \"cumulative\"),   full.codes = TRUE,   compact.codes = TRUE,   subconditions = FALSE )"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comorbidities — comorbidities","text":"data data.frame \"long\" format. input data.frame expected one column ICD codes (one code per row) additional (optional) columns patient/encounter ids, ICD version, diagnostic/procedure status, present--admission flags, primary diagnostic flags, age. icd.codes Character scalar naming column data contains ICD codes.  codes can full (applicable dots, e.g., C84.2), compact (dots omitted, e.g., C842), mix full compact codes.  Use method Character string indicating comorbidity algorithm apply data. id.vars Optional character vector column names. missing, entire input data treated single encounter single patient.  want set flag.method = \"current\" length(id.vars) >= 2 expected.  last element encounter order (must sortable).\" icdv.var Character scalar naming column data indicates ICD version (9 10). present must integer values 9 10.  icdv.var takes precedence icdv provided. icdv integer value 9L 10L indicating data[[icd.codes]] ICD version 9 10, respectively. Ignored (warning) icdv.var provided. dx.var Character scalar naming column data indicates diagnostic (1) vs procedural (0) codes. present must integer values 0 1.  dx.var takes precedence dx provided. dx integer indicating data[[icd.codes]] diagnostic (1) procedure (0) codes. Ignored (warning) dx.var provided. poa.var Character scalar naming column present--admission flags: integer 1L (present), 0L (present), NA. PCCC Charlson flag conditions code present--admission.  Elixhauser mix conditions require present--admission others . poa.var takes precedence poa provided. poa Integer scalar 0 1. Use icd.codes share present--admission status. Ignored warning poa poa.var provided. age.var Character scalar naming column data contains patient age years. applicable Charlson comorbidities. primarydx.var Character scalar naming column data indicates whether data[[icd.codes]] primary diagnostic codes (1L) (0L). Primary diagnosis used Elixhauser comorbidities ignored method PCCC Charlson. primarydx.var takes precedence primarydx provided. primarydx integer value 0 1. 0, treat codes non-primary diagnoses; 1, treat codes primary diagnoses. Ignored,  warning, primarydx.var provided. flag.method flag.method = 'current' (default) codes associated current id.vars considered flagging comorbidities.  flag.method = 'cumulative' prior encounters considered flagging comorbidities. See Details. full.codes, compact.codes Logical; TRUE compare data[[icd.codes]] full /compact ICD codes method’s lookup tables. Full ICD codes include decimal point (applicable) compact codes omit decimal point. example: B95.0 full ICD-10-CM diagnostic code “Streptococcus, group , cause disease classified elsewhere,” whereas B950 associated compact code. subconditions Logical scalar; TRUE, report conditions subconditions (PCCC ).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comorbidities — comorbidities","text":"return object slightly different depending value method subconditions. subconditions = FALSE, medicalcoder_comorbidities object (data.frame attributes) returned.  Column(s) id.vars, defined function call.  method following columns: num_cmrb count comorbidities/conditions flagged cmrb_flag 0/1 integer indicator least one comorbidity/condition. Additional columns: PCCC methods: method = \"pccc_v2.0\" method = \"pccc_v2.1\", one indicator column per condition. method = \"pccc_v3.0\" method = \"pccc_v3.1\", four columns per condition: <condition>_dxpr_or_tech: condition flag due presence either diagnostic procedure code, flag due presence technology dependence code along least one comorbidity flagged diagnostic procedure code. <condition>_dxpr_only: condition flagged due presence non-technology dependent diagnostic procedure code . <condition>_tech_only: condition flagged due presence technology dependent code least one comorbidity flagged non-technology dependent code. <condition>_dxpr_and_tech: patient diagnostic procedure codes technology dependence code condition. Charlson variants, indicator columns returned relevant conditions, cci (Charlson Comorbidity Index), age_score. Elixhauser variants, indicator columns returned relevant comorbidities, mortality, readmission indices. subconditions = TRUE method PCCC variant, list length two returned: first element contains condition indicators; second element named list data.frames indicators subconditions within condition.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comorbidities — comorbidities","text":"flag.method = \"current\", codes index encounter contribute flags. longitudinal method selected (e.g., \"cumulative\"), prior encounters id.vars combination may contribute condition flags. cumulative method work id.vars need character vector length 2 .  last variable listed id.vars considered encounter id sortable. example, say data hospital, patient, encounter id.  id.vars one two entries:  c(\"hospital\", \"patient\", \"encounter\") c(\"patient\", \"hospital\", \"encounter\").  cases return \"encounter\" within hospital/patient id interaction \"encounter\" within patient/hospital interaction. critically important data[[tail(id.vars, 1)]] variable can sorted.  Just data sorted temporal order mean results correct tail(id.vars, 1) order data.  example, say following: id.vars = c(\"patid\", \"enc_id\") give wrong result enc_id 10725138 sorted come enc_id 10823090.  id.var = c(\"patid\", \"date\") sufficient input, assuming date correctly stored.   Adding column enc_seq, e.g., calling comorbidities() id.vars = c(\"patid\", \"enc_seq\") better performance using date clear possible issues non-sequential encounter ids source data.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comorbidities — comorbidities","text":"Pediatric Complex Chronic Conditions: Feudtner, C., Feinstein, J.., Zhong, W. et al. Pediatric complex chronic conditions classification system version 2: updated ICD-10 complex medical technology dependence transplantation. BMC Pediatr 14, 199 (2014). https://doi.org/10.1186/1471-2431-14-199 Feinstein JA, Hall M, Davidson , Feudtner C. Pediatric Complex Chronic Condition System Version 3. JAMA Netw Open. 2024;7(7):e2420579. https://doi.org/10.1001/jamanetworkopen.2024.20579 Charlson Comorbidities: Mary E. Charlson, Peter Pompei, Kathy L. Ales, C.Ronald MacKenzie, new method classifying prognostic comorbidity longitudinal studies: Development validation, Journal Chronic Diseases, Volume 40, Issue 5, 1987, Pages 373-383, ISSN 0021-9681, https://doi.org/10.1016/0021-9681(87)90171-8. Deyo RA, Cherkin DC, Ciol MA. Adapting clinical comorbidity index use ICD-9-CM administrative databases. J Clin Epidemiol. 1992 Jun;45(6):613-9. https://doi.org/10.1016/0895-4356(92)90133-8. PMID: 1607900. Quan H, Sundararajan V, Halfon P, Fong , Burnand B, Luthi JC, Saunders LD, Beck CA, Feasby TE, Ghali WA. Coding algorithms defining comorbidities ICD-9-CM ICD-10 administrative data. Med Care. 2005 Nov;43(11):1130-9. https://doi.org/10.1097/01.mlr.0000182534.19832.83. PMID: 16224307. Quan H, Li B, Couris CM, Fushimi K, Graham P, Hider P, Januel JM, Sundararajan V. Updating validating Charlson comorbidity index score risk adjustment hospital discharge abstracts using data 6 countries. J Epidemiol. 2011 Mar 15;173(6):676-82. https://doi.org/10.1093/aje/kwq433. Epub 2011 Feb 17. PMID: 21330339. Glasheen WP, Cordier T, Gumpina R, Haugh G, Davis J, Renda . Charlson Comorbidity Index: ICD-9 Update ICD-10 Translation. Health Drug Benefits. 2019 Jun-Jul;12(4):188-197. PMID: 31428236; PMCID: PMC6684052. Elixhauser Comorbidities: Agency Healthcare Research Quality (AHRQ). Elixhauser Comorbidity Software Refined ICD-10-CM Diagnoses, v2025.1 [Internet]. 2025. Available : https://www.hcup-us.ahrq.gov/toolssoftware/comorbidityicd10/comorbidity_icd10.jsp","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/comorbidities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comorbidities — comorbidities","text":"","code":"pccc_v3.1_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"pccc_v3.1\",                 flag.method = 'current',                 poa = 1) summary(pccc_v3.1_results) #>          condition                                   label dxpr_or_tech_count #> 1  congeni_genetic      Other Congenital or Genetic Defect               3225 #> 2              cvd                          Cardiovascular               5147 #> 3               gi                        Gastrointestinal               5652 #> 4      hemato_immu              Hematologic or Immunologic               2832 #> 5       malignancy                              Malignancy               3784 #> 6        metabolic                               Metabolic               3407 #> 7             misc Miscellaneous, Not Elsewhere Classified                764 #> 8         neonatal                    Premature & Neonatal               1516 #> 9        neuromusc             Neurologic or Neuromuscular               5828 #> 10           renal                          Renal Urologic               2787 #> 11     respiratory                             Respiratory               3260 #> 12    any_tech_dep               Any Technology Dependence               7012 #> 13  any_transplant                     Any Transplantation               1585 #> 14       cmrb_flag                           Any Condition              20871 #> 15        num_cmrb                         >= 2 conditions              10657 #> 16        num_cmrb                         >= 3 conditions               4582 #> 17        num_cmrb                         >= 4 conditions               1571 #> 18        num_cmrb                         >= 5 conditions                418 #> 19        num_cmrb                         >= 6 conditions                 88 #> 20        num_cmrb                         >= 7 conditions                 13 #> 21        num_cmrb                         >= 8 conditions                  2 #> 22        num_cmrb                         >= 9 conditions                  0 #> 23        num_cmrb                        >= 10 conditions                  0 #> 24        num_cmrb                        >= 11 conditions                  0 #>    dxpr_or_tech_percent dxpr_only_count dxpr_only_percent tech_only_count #> 1           8.428728242            3225         8.4287282               0 #> 2          13.451988919            4560        11.9178297             283 #> 3          14.771836287            1420         3.7112540            3855 #> 4           7.401599498            2832         7.4015995               0 #> 5           9.889707804            3784         9.8897078               0 #> 6           8.904396006            3356         8.7711045              40 #> 7           1.996759187             121         0.3162407             643 #> 8           3.962155664            1516         3.9621557               0 #> 9          15.231822696            4564        11.9282839             316 #> 10          7.283989337            1876         4.9030370             555 #> 11          8.520202812            1848         4.8298573             755 #> 12         18.326276724              NA                NA              NA #> 13          4.142491245              NA                NA              NA #> 14         54.547592912              NA                NA              NA #> 15         27.852699807              NA                NA              NA #> 16         11.975328002              NA                NA              NA #> 17          4.105901417              NA                NA              NA #> 18          1.092467723              NA                NA              NA #> 19          0.229993205              NA                NA              NA #> 20          0.033976269              NA                NA              NA #> 21          0.005227118              NA                NA              NA #> 22          0.000000000              NA                NA              NA #> 23          0.000000000              NA                NA              NA #> 24          0.000000000              NA                NA              NA #>    tech_only_percent dxpr_and_tech_count dxpr_and_tech_percent #> 1          0.0000000                   0            0.00000000 #> 2          0.7396372                 304            0.79452198 #> 3         10.0752705                 377            0.98531180 #> 4          0.0000000                   0            0.00000000 #> 5          0.0000000                   0            0.00000000 #> 6          0.1045424                  11            0.02874915 #> 7          1.6805185                   0            0.00000000 #> 8          0.0000000                   0            0.00000000 #> 9          0.8258847                 948            2.47765407 #> 10         1.4505253                 356            0.93042706 #> 11         1.9732372                 657            1.71710836 #> 12                NA                  NA                    NA #> 13                NA                  NA                    NA #> 14                NA                  NA                    NA #> 15                NA                  NA                    NA #> 16                NA                  NA                    NA #> 17                NA                  NA                    NA #> 18                NA                  NA                    NA #> 19                NA                  NA                    NA #> 20                NA                  NA                    NA #> 21                NA                  NA                    NA #> 22                NA                  NA                    NA #> 23                NA                  NA                    NA #> 24                NA                  NA                    NA  pccc_v3.1_subcondition_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"pccc_v3.1\",                 flag.method = 'current',                 poa = 1,                 subconditions = TRUE) summary(pccc_v3.1_subcondition_results) #>          condition                                subcondition count #> 1  congeni_genetic                                        <NA>  3225 #> 2  congeni_genetic                    bone_and_joint_anomalies   825 #> 3  congeni_genetic                       chromosomal_anomalies  1544 #> 4  congeni_genetic      diaphragm_and_abdominal_wall_anomalies   300 #> 5  congeni_genetic                  other_congenital_anomalies   754 #> 6              cvd                                        <NA>  5147 #> 7              cvd                            cardiomyopathies   240 #> 8              cvd                         conduction_disorder   653 #> 9              cvd                   device_and_technology_use   587 #> 10             cvd                                dysrhythmias  1130 #> 11             cvd                        endocardium_diseases   278 #> 12             cvd        heart_and_great_vessel_malformations  2320 #> 13             cvd                                       other  1247 #> 14             cvd                             transplantation   271 #> 15              gi                                        <NA>  5652 #> 16              gi         chronic_liver_disease_and_cirrhosis   290 #> 17              gi                        congenital_anomalies   709 #> 18              gi                   device_and_technology_use  4232 #> 19              gi                  inflammatory_bowel_disease   264 #> 20              gi                                       other   295 #> 21              gi                             transplantation   343 #> 22     hemato_immu                                        <NA>  2832 #> 23     hemato_immu                   acquired_immunodeficiency    11 #> 24     hemato_immu                            aplastic_anemias   823 #> 25     hemato_immu                     coagulation_hemorrhagic   100 #> 26     hemato_immu       diffuse_diseases_of_connective_tissue   125 #> 27     hemato_immu                    hemophagocytic_syndromes    59 #> 28     hemato_immu                          hereditary_anemias   771 #> 29     hemato_immu                 hereditary_immunodeficiency   909 #> 30     hemato_immu                                  leukopenia    28 #> 31     hemato_immu                                       other    12 #> 32     hemato_immu polyarteritis_nodosa_and_related_conditions    46 #> 33     hemato_immu                                 sarcoidosis     3 #> 34     hemato_immu                             transplantation   181 #> 35      malignancy                                        <NA>  3784 #> 36      malignancy                                   neoplasms  3525 #> 37      malignancy                             transplantation   452 #> 38       metabolic                                        <NA>  3407 #> 39       metabolic                       amino_acid_metabolism   194 #> 40       metabolic                     carbohydrate_metabolism   130 #> 41       metabolic                   device_and_technology_use    51 #> 42       metabolic                         endocrine_disorders   884 #> 43       metabolic                            lipid_metabolism   354 #> 44       metabolic                   other_metabolic_disorders  1870 #> 45       metabolic                           storage_disorders    82 #> 46            misc                                        <NA>   764 #> 47            misc                   device_and_technology_use   643 #> 48            misc                             transplantation   121 #> 49        neonatal                                        <NA>  1516 #> 50        neonatal                              birth_asphyxia    11 #> 51        neonatal                cerebral_hemorrhage_at_birth    84 #> 52        neonatal                          extreme_immaturity   349 #> 53        neonatal                          fetal_malnutrition    45 #> 54        neonatal             hypoxic_ischemic_encephalopathy   130 #> 55        neonatal                                       other   247 #> 56        neonatal                        respiratory_diseases   950 #> 57        neonatal                 spinal_cord_injury_at_birth     0 #> 58       neuromusc                                        <NA>  5828 #> 59       neuromusc         brain_and_spinal_cord_malformations  1767 #> 60       neuromusc               cns_degeneration_and_diseases  1474 #> 61       neuromusc                   device_and_technology_use  1264 #> 62       neuromusc                                    epilepsy   833 #> 63       neuromusc                    infantile_cerebral_palsy  1322 #> 64       neuromusc                   intellectual_disabilities   161 #> 65       neuromusc                           movement_diseases   146 #> 66       neuromusc         muscular_dystrophies_and_myopathies   147 #> 67       neuromusc              occlusion_of_cerebral_arteries    92 #> 68       neuromusc                  other_neurologic_disorders   848 #> 69           renal                                        <NA>  2787 #> 70           renal                    chronic_bladder_diseases   519 #> 71           renal                       chronic_renal_failure   627 #> 72           renal                        congenital_anomalies   915 #> 73           renal                   device_and_technology_use   911 #> 74           renal                                       other   217 #> 75           renal                             transplantation   322 #> 76     respiratory                                        <NA>  3260 #> 77     respiratory                chronic_respiratory_diseases  1092 #> 78     respiratory                             cystic_fibrosis   400 #> 79     respiratory                   device_and_technology_use  1412 #> 80     respiratory                                       other    22 #> 81     respiratory                   respiratory_malformations  1091 #> 82     respiratory                             transplantation    39 #>    percent_of_cohort percent_of_those_with_condition #> 1        8.428728242                              NA #> 2        2.156186294                      25.5813953 #> 3        4.035335320                      47.8759690 #> 4        0.784067743                       9.3023256 #> 5        1.970623595                      23.3798450 #> 6       13.451988919                              NA #> 7        0.627254195                       4.6629104 #> 8        1.706654122                      12.6870021 #> 9        1.534159218                      11.4047018 #> 10       2.953321834                      21.9545366 #> 11       0.726569442                       5.4012046 #> 12       6.063457216                      45.0748009 #> 13       3.259108254                      24.2277055 #> 14       0.708274528                       5.2652030 #> 15      14.771836287                              NA #> 16       0.757932152                       5.1309271 #> 17       1.853013434                      12.5442321 #> 18      11.060582301                      74.8761500 #> 19       0.689979614                       4.6709130 #> 20       0.770999948                       5.2193914 #> 21       0.896450787                       6.0686483 #> 22       7.401599498                              NA #> 23       0.028749151                       0.3884181 #> 24       2.150959176                      29.0607345 #> 25       0.261355914                       3.5310734 #> 26       0.326694893                       4.4138418 #> 27       0.154199990                       2.0833333 #> 28       2.015054101                      27.2245763 #> 29       2.375725263                      32.0974576 #> 30       0.073179656                       0.9887006 #> 31       0.031362710                       0.4237288 #> 32       0.120223721                       1.6242938 #> 33       0.007840677                       0.1059322 #> 34       0.473054205                       6.3912429 #> 35       9.889707804                              NA #> 36       9.212795986                      93.1553911 #> 37       1.181328733                      11.9450317 #> 38       8.904396006                              NA #> 39       0.507030474                       5.6941591 #> 40       0.339762689                       3.8156736 #> 41       0.133291516                       1.4969181 #> 42       2.310386284                      25.9465806 #> 43       0.925199937                      10.3903728 #> 44       4.887355601                      54.8869974 #> 45       0.214311850                       2.4068095 #> 46       1.996759187                              NA #> 47       1.680518530                      84.1623037 #> 48       0.316240657                      15.8376963 #> 49       3.962155664                              NA #> 50       0.028749151                       0.7255937 #> 51       0.219538968                       5.5408971 #> 52       0.912132142                      23.0211082 #> 53       0.117610162                       2.9683377 #> 54       0.339762689                       8.5751979 #> 55       0.645549109                      16.2928760 #> 56       2.482881188                      62.6649077 #> 57       0.000000000                       0.0000000 #> 58      15.231822696                              NA #> 59       4.618159009                      30.3191489 #> 60       3.852386179                      25.2916953 #> 61       3.303538759                      21.6884008 #> 62       2.177094768                      14.2930679 #> 63       3.455125189                      22.6835964 #> 64       0.420783022                       2.7625257 #> 65       0.381579635                       2.5051476 #> 66       0.384193194                       2.5223061 #> 67       0.240447441                       1.5785861 #> 68       2.216298155                      14.5504461 #> 69       7.283989337                              NA #> 70       1.356437196                      18.6221744 #> 71       1.638701584                      22.4973089 #> 72       2.391406618                      32.8310011 #> 73       2.380952381                      32.6874776 #> 74       0.567142334                       7.7861500 #> 75       0.841566045                      11.5536419 #> 76       8.520202812                              NA #> 77       2.854006586                      33.4969325 #> 78       1.045423658                      12.2699387 #> 79       3.690345513                      43.3128834 #> 80       0.057498301                       0.6748466 #> 81       2.851393027                      33.4662577 #> 82       0.101928807                       1.1963190  charlson_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"charlson_quan2011\",                 flag.method = 'current',                 poa = 1) summary(charlson_results) #> $conditions #>                     condition_description condition count      percent #> 1                                AIDS/HIV   aidshiv     7  0.018294914 #> 2                          Any malignancy       mal  2577  6.735141916 #> 3                 Cerebrovascular disease     cebvd   411  1.074172809 #> 4               Chronic pulmonary disease      copd  3415  8.925304480 #> 5                Congestive heart failure       chf   684  1.787674455 #> 6                                Dementia       dem    13  0.033976269 #> 7     Diabetes with chronic complications       dmc    13  0.033976269 #> 8  Diabetes without chronic complications        dm   445  1.163033819 #> 9                Hemiplegia or paraplegia        hp  1177  3.076159113 #> 10                    Liver disease, mild       mld   663  1.732789713 #> 11      Liver disease, moderate to severe      msld   206  0.538393184 #> 12                 Metastatic solid tumor       mst   453  1.183942293 #> 13                  Myocardial infarction        mi    10  0.026135591 #> 14                   Peptic ulcer disease       pud    45  0.117610162 #> 15            Peripheral vascular disease       pvd   217  0.567142334 #> 16                          Renal disease       rnd   898  2.346976112 #> 17                      Rheumatic disease       rhd   136  0.355444044 #> 18                                   >= 1      <NA>  9841 25.720035544 #> 19                                   >= 2      <NA>  1368  3.575348910 #> 20                                   >= 3      <NA>   138  0.360671162 #> 21                                   >= 4      <NA>    20  0.052271183 #> 22                                   >= 5      <NA>     3  0.007840677 #>  #> $age_summary #>   age_score count percent #> 1      <NA> 38262     100 #>  #> $index_summary #>   min q1 median q3 max #> 1   0  0      0  0  10 #>   elixhauser_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"elixhauser_ahrq2025\",                 primarydx = 1,                 flag.method = 'current',                 poa = 1) summary(elixhauser_results) #> $conditions #>       condition count percent #> 1          AIDS     0       0 #> 2       ALCOHOL     0       0 #> 3       ANEMDEF     0       0 #> 4    AUTOIMMUNE     0       0 #> 5       BLDLOSS     0       0 #> 6   CANCER_LEUK     0       0 #> 7  CANCER_LYMPH     0       0 #> 8   CANCER_METS     0       0 #> 9  CANCER_NSITU     0       0 #> 10 CANCER_SOLID     0       0 #> 11         CBVD     0       0 #> 12         COAG     0       0 #> 13     DEMENTIA     0       0 #> 14      DEPRESS     0       0 #> 15      DIAB_CX     0       0 #> 16    DIAB_UNCX     0       0 #> 17   DRUG_ABUSE     0       0 #> 18           HF     0       0 #> 19       HTN_CX     0       0 #> 20     HTN_UNCX     0       0 #> 21    LIVER_MLD     0       0 #> 22    LIVER_SEV     0       0 #> 23 LUNG_CHRONIC     0       0 #> 24   NEURO_MOVT     0       0 #> 25    NEURO_OTH     0       0 #> 26   NEURO_SEIZ     0       0 #> 27        OBESE     0       0 #> 28    PARALYSIS     0       0 #> 29     PERIVASC     0       0 #> 30    PSYCHOSES     0       0 #> 31     PULMCIRC     0       0 #> 32   RENLFL_MOD     0       0 #> 33   RENLFL_SEV     0       0 #> 34 THYROID_HYPO     0       0 #> 35  THYROID_OTH     0       0 #> 36 ULCER_PEPTIC     0       0 #> 37        VALVE     0       0 #> 38     WGHTLOSS     0       0 #>  #> $index_summary #>         index min q1 median q3 max #> 1 readmission   0  0      0  0   0 #> 2   mortality   0  0      0  0   0 #>"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Charlson Codes — get_charlson_codes","title":"Get Charlson Codes — get_charlson_codes","text":"Retrieve copy internal lookup tables ICD codes used assessing Charlson comorbidities.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Charlson Codes — get_charlson_codes","text":"","code":"get_charlson_codes()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Charlson Codes — get_charlson_codes","text":"data.frame following columns: icdv: Integer vector indicating code ICD-9 ICD-10 dx: Integer vector.  1 code diagnostic, (ICD-9-CM, ICD-10-CM, , CDC Mortality), 0 code procedural (ICD-9-PCS, ICD-10-PCS) full_code: Character vector ICD code relevant decimal point code: Character vector compact ICD code condition: Character vector conditions charson_\\<variant\\>: Integer vector indicating code part \\<variant\\> Charlson comorbidities.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Charlson Codes — get_charlson_codes","text":"","code":"head(get_charlson_codes()) #>   icdv dx full_code  code condition charlson_cdmf2019 charlson_deyo1992 #> 1    9  1     003.1  0031      aids                 1                 0 #> 2    9  1     007.2  0072      aids                 1                 0 #> 3    9  1     007.4  0074      aids                 1                 0 #> 4    9  1       010   010      aids                 1                 0 #> 5    9  1     010.0  0100      aids                 1                 0 #> 6    9  1    010.00 01000      aids                 1                 0 #>   charlson_quan2005 charlson_quan2011 #> 1                 0                 0 #> 2                 0                 0 #> 3                 0                 0 #> 4                 0                 0 #> 5                 0                 0 #> 6                 0                 0 str(get_charlson_codes()) #> 'data.frame':\t7410 obs. of  9 variables: #>  $ icdv             : int  9 9 9 9 9 9 9 9 9 9 ... #>  $ dx               : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ full_code        : chr  \"003.1\" \"007.2\" \"007.4\" \"010\" ... #>  $ code             : chr  \"0031\" \"0072\" \"0074\" \"010\" ... #>  $ condition        : chr  \"aids\" \"aids\" \"aids\" \"aids\" ... #>  $ charlson_cdmf2019: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ charlson_deyo1992: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ charlson_quan2005: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ charlson_quan2011: int  0 0 0 0 0 0 0 0 0 0 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_index_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Charlson Index Scores — get_charlson_index_scores","title":"Get Charlson Index Scores — get_charlson_index_scores","text":"Retrieve copy internal lookup tables index scores used assessing Charlson comorbidities.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_index_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Charlson Index Scores — get_charlson_index_scores","text":"","code":"get_charlson_index_scores()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_index_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Charlson Index Scores — get_charlson_index_scores","text":"data.frame following columns: condition: Character vector conditions index: Character vector indicating score mortality readmission index score charlson_<variant>:  index scores variant","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_charlson_index_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Charlson Index Scores — get_charlson_index_scores","text":"","code":"head(get_charlson_index_scores()) #>       condition_description condition charlson_cdmf2019 charlson_quan2011 #> 1                      AIDS      aids                 6                NA #> 2                  AIDS/HIV   aidshiv                NA                 4 #> 3    HIV infection, no AIDS       hiv                 3                NA #> 4            Any malignancy       mal                 2                 2 #> 5   Cerebrovascular disease     cebvd                 1                 0 #> 6 Chronic pulmonary disease      copd                 1                 1 #>   charlson_quan2005 charlson_deyo1992 #> 1                NA                NA #> 2                 6                 6 #> 3                NA                NA #> 4                 2                 2 #> 5                 1                 1 #> 6                 1                 1 str(get_charlson_index_scores()) #> 'data.frame':\t21 obs. of  6 variables: #>  $ condition_description: chr  \"AIDS\" \"AIDS/HIV\" \"HIV infection, no AIDS\" \"Any malignancy\" ... #>  $ condition            : chr  \"aids\" \"aidshiv\" \"hiv\" \"mal\" ... #>  $ charlson_cdmf2019    : int  6 NA 3 2 1 1 1 1 2 1 ... #>  $ charlson_quan2011    : int  NA 4 NA 2 0 1 2 2 1 0 ... #>  $ charlson_quan2005    : int  NA 6 NA 2 1 1 1 1 2 1 ... #>  $ charlson_deyo1992    : int  NA 6 NA 2 1 1 1 1 2 1 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Elixhauser Codes — get_elixhauser_codes","title":"Get Elixhauser Codes — get_elixhauser_codes","text":"Retrieve  copy internal lookup tables ICD codes used assessing Elixhauser comorbidities.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Elixhauser Codes — get_elixhauser_codes","text":"","code":"get_elixhauser_codes()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Elixhauser Codes — get_elixhauser_codes","text":"data.frame following columns: icdv: Integer vector indicating code ICD-9 ICD-10 dx: Integer vector.  1 code diagnostic, (ICD-9-CM, ICD-10-CM, , CDC Mortality), 0 code procedural (ICD-9-PCS, ICD-10-PCS) full_code: Character vector ICD code relevant decimal point code: Character vector compact ICD code omitting relevant decimal point condition: Character vector conditions elixhauser_<variant>: Integer vector indicating code part <variant> Elixhauser comorbidities.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Elixhauser Codes — get_elixhauser_codes","text":"","code":"head(get_elixhauser_codes()) #>   icdv dx full_code  code condition elixhauser_ahrq_web #> 1    9  1       042   042      AIDS                   1 #> 2    9  1    070.22 07022     LIVER                   1 #> 3    9  1    070.23 07023     LIVER                   1 #> 4    9  1    070.32 07032     LIVER                   1 #> 5    9  1    070.33 07033     LIVER                   1 #> 6    9  1    070.44 07044     LIVER                   1 #>   elixhauser_elixhauser1988 elixhauser_quan2005 elixhauser_ahrq2022 #> 1                         1                   1                  NA #> 2                         0                   1                  NA #> 3                         0                   1                  NA #> 4                         1                   1                  NA #> 5                         1                   1                  NA #> 6                         0                   1                  NA #>   elixhauser_ahrq2023 elixhauser_ahrq2024 elixhauser_ahrq2025 #> 1                  NA                  NA                  NA #> 2                  NA                  NA                  NA #> 3                  NA                  NA                  NA #> 4                  NA                  NA                  NA #> 5                  NA                  NA                  NA #> 6                  NA                  NA                  NA str(get_elixhauser_codes()) #> 'data.frame':\t10679 obs. of  12 variables: #>  $ icdv                     : int  9 9 9 9 9 9 9 9 9 9 ... #>  $ dx                       : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ full_code                : chr  \"042\" \"070.22\" \"070.23\" \"070.32\" ... #>  $ code                     : chr  \"042\" \"07022\" \"07023\" \"07032\" ... #>  $ condition                : chr  \"AIDS\" \"LIVER\" \"LIVER\" \"LIVER\" ... #>  $ elixhauser_ahrq_web      : int  1 1 1 1 1 1 1 0 0 0 ... #>  $ elixhauser_elixhauser1988: int  1 0 0 1 1 0 1 0 0 0 ... #>  $ elixhauser_quan2005      : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ elixhauser_ahrq2022      : int  NA NA NA NA NA NA NA NA NA NA ... #>  $ elixhauser_ahrq2023      : int  NA NA NA NA NA NA NA NA NA NA ... #>  $ elixhauser_ahrq2024      : int  NA NA NA NA NA NA NA NA NA NA ... #>  $ elixhauser_ahrq2025      : int  NA NA NA NA NA NA NA NA NA NA ..."},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_index_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Elixhauser Index Scores — get_elixhauser_index_scores","title":"Get Elixhauser Index Scores — get_elixhauser_index_scores","text":"Functions get copy internal lookup tables ICD codes index scores used assessing Elixhauser comorbidities.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_index_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Elixhauser Index Scores — get_elixhauser_index_scores","text":"","code":"get_elixhauser_index_scores()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_index_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Elixhauser Index Scores — get_elixhauser_index_scores","text":"data.frame following columns: condition: Character vector conditions index: Character vector indicating score mortality readmission index score elixhauser_<variant>: integer vector scores","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_index_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Elixhauser Index Scores — get_elixhauser_index_scores","text":"","code":"head(get_elixhauser_index_scores()) #>   condition       index elixhauser_ahrq_web elixhauser_elixhauser1988 #> 1      AIDS   mortality                   0                         0 #> 2      AIDS readmission                  19                        19 #> 3   ALCOHOL   mortality                  -1                        -1 #> 4   ALCOHOL readmission                   6                         6 #> 5   ANEMDEF   mortality                  -2                        -2 #> 6   ANEMDEF readmission                   9                         9 #>   elixhauser_quan2005 elixhauser_ahrq2022 elixhauser_ahrq2023 #> 1                   0                  -4                  -4 #> 2                  19                   5                   5 #> 3                  -1                  -1                  -1 #> 4                   6                   3                   3 #> 5                  -2                  -3                  -3 #> 6                   9                   5                   5 #>   elixhauser_ahrq2024 elixhauser_ahrq2025 #> 1                  -4                  -4 #> 2                   5                   5 #> 3                  -1                  -1 #> 4                   3                   3 #> 5                  -3                  -3 #> 6                   5                   5 str(get_elixhauser_index_scores()) #> 'data.frame':\t112 obs. of  9 variables: #>  $ condition                : chr  \"AIDS\" \"AIDS\" \"ALCOHOL\" \"ALCOHOL\" ... #>  $ index                    : chr  \"mortality\" \"readmission\" \"mortality\" \"readmission\" ... #>  $ elixhauser_ahrq_web      : int  0 19 -1 6 -2 9 0 4 NA NA ... #>  $ elixhauser_elixhauser1988: int  0 19 -1 6 -2 9 0 4 NA NA ... #>  $ elixhauser_quan2005      : int  0 19 -1 6 -2 9 0 4 NA NA ... #>  $ elixhauser_ahrq2022      : int  -4 5 -1 3 -3 5 NA NA -1 2 ... #>  $ elixhauser_ahrq2023      : int  -4 5 -1 3 -3 5 NA NA 0 2 ... #>  $ elixhauser_ahrq2024      : int  -4 5 -1 3 -3 5 NA NA 0 2 ... #>  $ elixhauser_ahrq2025      : int  -4 5 -1 3 -3 5 NA NA 0 2 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_poa.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Elixhauser Present-on-Admission Requirements — get_elixhauser_poa","title":"Get Elixhauser Present-on-Admission Requirements — get_elixhauser_poa","text":"Retrieve copy internal lookup table details Elixhauser comorbidities require associated ICD codes present--admission flagged.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_poa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Elixhauser Present-on-Admission Requirements — get_elixhauser_poa","text":"","code":"get_elixhauser_poa()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_poa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Elixhauser Present-on-Admission Requirements — get_elixhauser_poa","text":"data.frame following columns: condition: Character vector conditions desc: Character vector verbose description condition poa_required: Integer indicators code needs present admission considered comorbidity elixhauser_<variant>: indicators Elixhauser <variant>","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_elixhauser_poa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Elixhauser Present-on-Admission Requirements — get_elixhauser_poa","text":"","code":"head(get_elixhauser_poa()) #>    condition                                          desc poa_required #> 1       AIDS           Acquired immune deficiency syndrome            0 #> 2    ALCOHOL                                 Alcohol abuse            0 #> 3    ANEMDEF Anemias due to other nutritional deficiencies            1 #> 4    ANEMDEF                            Deficiency anemias            1 #> 5 AUTOIMMUNE                         Autoimmune conditions            0 #> 6    BLDLOSS          Chronic blood loss (iron deficiency)            1 #>   elixhauser_ahrq2022 elixhauser_ahrq2023 elixhauser_ahrq2024 #> 1                   1                   1                   1 #> 2                   1                   1                   1 #> 3                  NA                   1                   1 #> 4                   1                  NA                  NA #> 5                   1                   1                   1 #> 6                  NA                   1                   1 #>   elixhauser_ahrq2025 #> 1                   1 #> 2                   1 #> 3                   1 #> 4                  NA #> 5                   1 #> 6                   1 str(get_elixhauser_poa()) #> 'data.frame':\t43 obs. of  7 variables: #>  $ condition          : chr  \"AIDS\" \"ALCOHOL\" \"ANEMDEF\" \"ANEMDEF\" ... #>  $ desc               : chr  \"Acquired immune deficiency syndrome\" \"Alcohol abuse\" \"Anemias due to other nutritional deficiencies\" \"Deficiency anemias\" ... #>  $ poa_required       : int  0 0 1 1 0 1 1 0 0 0 ... #>  $ elixhauser_ahrq2022: int  1 1 NA 1 1 NA 1 1 1 1 ... #>  $ elixhauser_ahrq2023: int  1 1 1 NA 1 1 NA 1 1 1 ... #>  $ elixhauser_ahrq2024: int  1 1 1 NA 1 1 NA 1 1 1 ... #>  $ elixhauser_ahrq2025: int  1 1 1 NA 1 1 NA 1 1 1 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ICD Codes — get_icd_codes","title":"Get ICD Codes — get_icd_codes","text":"Retrieve copy internal look table known ICD codes.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ICD Codes — get_icd_codes","text":"","code":"get_icd_codes(with.descriptions = FALSE, with.hierarchy = FALSE)"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ICD Codes — get_icd_codes","text":".descriptions Logical scalar, TRUE include description codes. .hierarchy Logical scalar, TRUE include ICD hierarchy.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ICD Codes — get_icd_codes","text":"data.frame default return following columns: icdv: Integer vector indicating code ICD-9 ICD-10 dx: Integer vector.  1 code diagnostic, (ICD-9-CM, ICD-10-CM, , CDC Mortality), 0 code procedural (ICD-9-PCS, ICD-10-PCS) full_code: Character vector ICD code relevant decimal point code: Character vector compact ICD code omitting relevant decimal point src: Character vector reporting source information.  See Details. known_start: Integer vector reporting first known year use.  See Details. known_end: Integer vector reporting last known year use.  See Details. assignable_start: Integer vector reporting first known year code assignable.  See Details. assignable_end: Integer vector reporting last known year code assignable.  See Details. .descriptions = TRUE following additional columns: desc: Character vector descriptions.  cms codes descriptions CMS used preferentially CDC. desc_start: Integer vector first year description used. desc_end: Integer vector last year description used. .hierarchy = TRUE following additional columns: chapter subchapter category subcategory subclassification subsubclassification extension","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"sources","dir":"Reference","previous_headings":"","what":"Sources","title":"Get ICD Codes — get_icd_codes","text":"three sources ICD codes. cms: Codes ICD-9-CM, ICD-9-PCS, ICD-10-CM, ICD-10-PCS standards. : Codes World Health Organization. cdc: Codes CDC Mortality coding standard.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"fiscal-and-calendar-years","dir":"Reference","previous_headings":"","what":"Fiscal and Calendar Years","title":"Get ICD Codes — get_icd_codes","text":"reporting years mix fiscal calendar years. Fiscal years United States Federal Government fiscal years, running October 1 September 30. example, fiscal year 2013 started October 1 2012 ended September 30 2013. Calendar years run January 1 December 31. Within ICD data columns known_start, known_end, assignable_start, assignable_end, desc_start desc_end.  ICD codes src == \"cms\", fiscal years.  codes src == \"cdc\" src == \"\" calendar years. known_start first fiscal calendar year (depending source) medicalcoder package definitive source data .  ICD-9-CM started United States fiscal year 1980.  Source information downloaded CDC CMS added source code medicalcoder package goes back 1997.  1997 \"known start\" known_end last fiscal calendar year (depending source) definitive source data .  ICD-9-CM ICD-9-PCS 2015.  ICD-10-CM ICD-10-PCS, active, just last year known data.  ICD-10 ends 2019.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"header-and-assignable-codes","dir":"Reference","previous_headings":"","what":"Header and Assignable Codes","title":"Get ICD Codes — get_icd_codes","text":"\"Assignable\" indicates code granular source. Ideally codes reported greatest level detail always case.  Also, greatest level detail can differ sources. Example: C86 header code cms codes C86.0, C86.1, C86.2, C86.3, C86.4, C86.5, C86.6 exist standards.  code fifth digit exists four digit codes 'assignable.'  cms standard, C86.0 assignable fiscal year 2024. fiscal year 2025 codes C86.00 C86.01 added making C86.0 header code C86.00 C86.01 assignable codes.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_icd_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ICD Codes — get_icd_codes","text":"","code":"icd_codes <- get_icd_codes() str(icd_codes) #> 'data.frame':\t227534 obs. of  9 variables: #>  $ icdv            : int  9 9 9 9 9 9 9 9 9 9 ... #>  $ dx              : int  0 0 0 0 0 0 1 0 1 0 ... #>  $ full_code       : chr  \"00\" \"00.0\" \"00.01\" \"00.02\" ... #>  $ code            : chr  \"00\" \"000\" \"0001\" \"0002\" ... #>  $ src             : chr  \"cms\" \"cms\" \"cms\" \"cms\" ... #>  $ known_start     : int  2003 2003 2003 2003 2003 2003 1997 2003 1997 2003 ... #>  $ known_end       : int  2015 2015 2015 2015 2015 2015 2015 2015 2015 2015 ... #>  $ assignable_start: int  NA NA 2003 2003 2003 2003 NA NA 1997 2003 ... #>  $ assignable_end  : int  NA NA 2015 2015 2015 2015 NA NA 2015 2015 ...  # Explore the change in the assignable year for C86 code between CMS and # WHO subset(get_icd_codes(), grepl(\"^C86$\", full_code)) #>        icdv dx full_code code src known_start known_end assignable_start #> 106157   10  1       C86  C86 cms        2014      2026               NA #> 106158   10  1       C86  C86 who        2010      2019               NA #>        assignable_end #> 106157             NA #> 106158             NA subset(get_icd_codes(), grepl(\"^C86\\\\.\\\\d$\", full_code)) #>        icdv dx full_code code src known_start known_end assignable_start #> 106159   10  1     C86.0 C860 cms        2014      2026             2014 #> 106160   10  1     C86.0 C860 who        2010      2019             2010 #> 106163   10  1     C86.1 C861 cms        2014      2026             2014 #> 106164   10  1     C86.1 C861 who        2010      2019             2010 #> 106167   10  1     C86.2 C862 cms        2014      2026             2014 #> 106168   10  1     C86.2 C862 who        2010      2019             2010 #> 106171   10  1     C86.3 C863 cms        2014      2026             2014 #> 106172   10  1     C86.3 C863 who        2010      2019             2010 #> 106175   10  1     C86.4 C864 cms        2014      2026             2014 #> 106176   10  1     C86.4 C864 who        2010      2019             2010 #> 106179   10  1     C86.5 C865 cms        2014      2026             2014 #> 106180   10  1     C86.5 C865 who        2010      2019             2010 #> 106183   10  1     C86.6 C866 cms        2014      2026             2014 #> 106184   10  1     C86.6 C866 who        2010      2019             2010 #>        assignable_end #> 106159           2024 #> 106160           2019 #> 106163           2024 #> 106164           2019 #> 106167           2024 #> 106168           2019 #> 106171           2024 #> 106172           2019 #> 106175           2024 #> 106176           2019 #> 106179           2024 #> 106180           2019 #> 106183           2024 #> 106184           2019 subset(get_icd_codes(), grepl(\"^C86\\\\.0(\\\\d|$)\", full_code)) #>        icdv dx full_code  code src known_start known_end assignable_start #> 106159   10  1     C86.0  C860 cms        2014      2026             2014 #> 106160   10  1     C86.0  C860 who        2010      2019             2010 #> 106161   10  1    C86.00 C8600 cms        2025      2026             2025 #> 106162   10  1    C86.01 C8601 cms        2025      2026             2025 #>        assignable_end #> 106159           2024 #> 106160           2019 #> 106161           2026 #> 106162           2026  is_icd(\"C86\", headerok = FALSE) # FALSE #> [1] FALSE is_icd(\"C86\", headerok = TRUE)  # TRUE #> [1] TRUE is_icd(\"C86\", headerok = TRUE, src = \"cdc\") # Not a CDC mortality code #> [1] FALSE  lookup_icd_codes(\"^C86\\\\.0\\\\d*\", regex = TRUE) #>    input_regex match_type icdv dx full_code  code src known_start known_end #> 1 ^C86\\\\.0\\\\d*  full_code   10  1     C86.0  C860 who        2010      2019 #> 2 ^C86\\\\.0\\\\d*  full_code   10  1     C86.0  C860 cms        2014      2026 #> 5 ^C86\\\\.0\\\\d*  full_code   10  1    C86.00 C8600 cms        2025      2026 #> 6 ^C86\\\\.0\\\\d*  full_code   10  1    C86.01 C8601 cms        2025      2026 #>   assignable_start assignable_end #> 1             2010           2019 #> 2             2014           2024 #> 5             2025           2026 #> 6             2025           2026"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pediatric Complex Chronic Conditions ICD Codes — get_pccc_codes","title":"Pediatric Complex Chronic Conditions ICD Codes — get_pccc_codes","text":"Retrieve copy internal lookup tables ICD codes mapping Pediatric Complex Chronic Conditions (PCCC) conditions subconditions variant.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pediatric Complex Chronic Conditions ICD Codes — get_pccc_codes","text":"","code":"get_pccc_codes()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pediatric Complex Chronic Conditions ICD Codes — get_pccc_codes","text":"data.frame following columns icdv: Integer vector indicating code ICD-9 ICD-10. dx: Integer vector.  1 code diagnostic, (ICD-9-CM, ICD-10-CM, , CDC Mortality), 0 code procedural (ICD-9-PCS, ICD-10-PCS). full_code: Character vector ICD code relevant decimal point. code: Character vector compact ICD code omitting relevant decimal point. condition: Character vector conditions. subcondition: Character vector subconditions. transplant_flag: Integer vector indicating code associated transplant. tech_dep_flag: Integer vector indicating code associated technology dependence. pccc_<variant>: Integer vector indicating code part v2.0, v2.1, v3.0, v3.1 variant.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pediatric Complex Chronic Conditions ICD Codes — get_pccc_codes","text":"","code":"head(get_pccc_codes()) #>   icdv dx full_code code  condition              subcondition transplant_flag #> 1    9  0     00.10 0010 malignancy                 neoplasms               0 #> 2    9  0     00.50 0050        cvd device_and_technology_use               0 #> 3    9  0     00.51 0051        cvd device_and_technology_use               0 #> 4    9  0     00.53 0053        cvd device_and_technology_use               0 #> 5    9  0     00.54 0054        cvd device_and_technology_use               0 #> 6    9  0     00.55 0055        cvd device_and_technology_use               0 #>   tech_dep_flag pccc_v3.1 pccc_v3.0 pccc_v2.1 pccc_v2.0 #> 1             0         1         1         1         1 #> 2             1         1         1         1         1 #> 3             1         1         1         1         1 #> 4             1         1         1         1         1 #> 5             1         1         1         1         1 #> 6             1         1         1         1         1 str(get_pccc_codes()) #> 'data.frame':\t7913 obs. of  12 variables: #>  $ icdv           : int  9 9 9 9 9 9 9 9 9 9 ... #>  $ dx             : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ full_code      : chr  \"00.10\" \"00.50\" \"00.51\" \"00.53\" ... #>  $ code           : chr  \"0010\" \"0050\" \"0051\" \"0053\" ... #>  $ condition      : chr  \"malignancy\" \"cvd\" \"cvd\" \"cvd\" ... #>  $ subcondition   : chr  \"neoplasms\" \"device_and_technology_use\" \"device_and_technology_use\" \"device_and_technology_use\" ... #>  $ transplant_flag: int  0 0 0 0 0 0 0 1 1 1 ... #>  $ tech_dep_flag  : int  0 1 1 1 1 1 1 0 0 0 ... #>  $ pccc_v3.1      : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ pccc_v3.0      : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ pccc_v2.1      : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ pccc_v2.0      : int  1 1 1 1 1 1 1 1 1 1 ..."},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Pediatric Complex Chronic Condition and Subconditions — get_pccc_conditions","title":"Pediatric Complex Chronic Condition and Subconditions — get_pccc_conditions","text":"Retrieve copy internal lookup tables syntax valid human readable labels Pediatric Complex Chronic Conditions (PCCC) conditions subconditions.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pediatric Complex Chronic Condition and Subconditions — get_pccc_conditions","text":"","code":"get_pccc_conditions()"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pediatric Complex Chronic Condition and Subconditions — get_pccc_conditions","text":"data.frame following columns condition: (character) syntax valid name condition subconditions: (character) syntax valid name subcondition conditions_label.: (character) human readable label condition subconditions_label: (character) human readable label subcondition","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/get_pccc_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pediatric Complex Chronic Condition and Subconditions — get_pccc_conditions","text":"","code":"get_pccc_conditions() #>          condition                                subcondition #> 1       malignancy                                   neoplasms #> 2              cvd                   device_and_technology_use #> 3             misc                             transplantation #> 4        neuromusc                  other_neurologic_disorders #> 5        neuromusc                   device_and_technology_use #> 6        metabolic                         endocrine_disorders #> 7               gi                                       other #> 8      respiratory                                       other #> 9      respiratory                   device_and_technology_use #> 10     respiratory                             transplantation #> 11             cvd        heart_and_great_vessel_malformations #> 12             cvd                             transplantation #> 13           renal                   device_and_technology_use #> 14     hemato_immu                             transplantation #> 15     hemato_immu                                       other #> 16              gi                   device_and_technology_use #> 17              gi                             transplantation #> 18           renal                                       other #> 19           renal                             transplantation #> 20            misc                   device_and_technology_use #> 21       metabolic                   device_and_technology_use #> 22     hemato_immu                   acquired_immunodeficiency #> 23     hemato_immu                                 sarcoidosis #> 24 congeni_genetic                    bone_and_joint_anomalies #> 25       metabolic                       amino_acid_metabolism #> 26       metabolic                     carbohydrate_metabolism #> 27       metabolic                            lipid_metabolism #> 28       metabolic                   other_metabolic_disorders #> 29     respiratory                             cystic_fibrosis #> 30       metabolic                           storage_disorders #> 31     hemato_immu                 hereditary_immunodeficiency #> 32     hemato_immu                          hereditary_anemias #> 33     hemato_immu                            aplastic_anemias #> 34     hemato_immu                     coagulation_hemorrhagic #> 35     hemato_immu                                  leukopenia #> 36     hemato_immu                    hemophagocytic_syndromes #> 37       neuromusc                   intellectual_disabilities #> 38     respiratory                chronic_respiratory_diseases #> 39       neuromusc               cns_degeneration_and_diseases #> 40       neuromusc                           movement_diseases #> 41       neuromusc                    infantile_cerebral_palsy #> 42           renal                    chronic_bladder_diseases #> 43       neuromusc                                    epilepsy #> 44       neuromusc         muscular_dystrophies_and_myopathies #> 45             cvd                                       other #> 46             cvd                        endocardium_diseases #> 47             cvd                            cardiomyopathies #> 48             cvd                         conduction_disorder #> 49             cvd                                dysrhythmias #> 50       neuromusc              occlusion_of_cerebral_arteries #> 51     hemato_immu polyarteritis_nodosa_and_related_conditions #> 52 congeni_genetic      diaphragm_and_abdominal_wall_anomalies #> 53              gi                  inflammatory_bowel_disease #> 54              gi         chronic_liver_disease_and_cirrhosis #> 55           renal                       chronic_renal_failure #> 56     hemato_immu       diffuse_diseases_of_connective_tissue #> 57       neuromusc         brain_and_spinal_cord_malformations #> 58     respiratory                   respiratory_malformations #> 59              gi                        congenital_anomalies #> 60           renal                        congenital_anomalies #> 61 congeni_genetic                       chromosomal_anomalies #> 62 congeni_genetic                  other_congenital_anomalies #> 63        neonatal                          fetal_malnutrition #> 64        neonatal                          extreme_immaturity #> 65        neonatal                cerebral_hemorrhage_at_birth #> 66        neonatal                 spinal_cord_injury_at_birth #> 67        neonatal                              birth_asphyxia #> 68        neonatal             hypoxic_ischemic_encephalopathy #> 69        neonatal                        respiratory_diseases #> 70        neonatal                                       other #> 71      malignancy                             transplantation #>                            condition_label #> 1                               Malignancy #> 2                           Cardiovascular #> 3  Miscellaneous, Not Elsewhere Classified #> 4              Neurologic or Neuromuscular #> 5              Neurologic or Neuromuscular #> 6                                Metabolic #> 7                         Gastrointestinal #> 8                              Respiratory #> 9                              Respiratory #> 10                             Respiratory #> 11                          Cardiovascular #> 12                          Cardiovascular #> 13                          Renal Urologic #> 14              Hematologic or Immunologic #> 15              Hematologic or Immunologic #> 16                        Gastrointestinal #> 17                        Gastrointestinal #> 18                          Renal Urologic #> 19                          Renal Urologic #> 20 Miscellaneous, Not Elsewhere Classified #> 21                               Metabolic #> 22              Hematologic or Immunologic #> 23              Hematologic or Immunologic #> 24      Other Congenital or Genetic Defect #> 25                               Metabolic #> 26                               Metabolic #> 27                               Metabolic #> 28                               Metabolic #> 29                             Respiratory #> 30                               Metabolic #> 31              Hematologic or Immunologic #> 32              Hematologic or Immunologic #> 33              Hematologic or Immunologic #> 34              Hematologic or Immunologic #> 35              Hematologic or Immunologic #> 36              Hematologic or Immunologic #> 37             Neurologic or Neuromuscular #> 38                             Respiratory #> 39             Neurologic or Neuromuscular #> 40             Neurologic or Neuromuscular #> 41             Neurologic or Neuromuscular #> 42                          Renal Urologic #> 43             Neurologic or Neuromuscular #> 44             Neurologic or Neuromuscular #> 45                          Cardiovascular #> 46                          Cardiovascular #> 47                          Cardiovascular #> 48                          Cardiovascular #> 49                          Cardiovascular #> 50             Neurologic or Neuromuscular #> 51              Hematologic or Immunologic #> 52      Other Congenital or Genetic Defect #> 53                        Gastrointestinal #> 54                        Gastrointestinal #> 55                          Renal Urologic #> 56              Hematologic or Immunologic #> 57             Neurologic or Neuromuscular #> 58                             Respiratory #> 59                        Gastrointestinal #> 60                          Renal Urologic #> 61      Other Congenital or Genetic Defect #> 62      Other Congenital or Genetic Defect #> 63                    Premature & Neonatal #> 64                    Premature & Neonatal #> 65                    Premature & Neonatal #> 66                    Premature & Neonatal #> 67                    Premature & Neonatal #> 68                    Premature & Neonatal #> 69                    Premature & Neonatal #> 70                    Premature & Neonatal #> 71                              Malignancy #>                             subcondition_label #> 1                                    Neoplasms #> 2                    Device And Technology Use #> 3                              Transplantation #> 4                   Other Neurologic Disorders #> 5                    Device And Technology Use #> 6                          Endocrine Disorders #> 7                                        Other #> 8                                        Other #> 9                    Device And Technology Use #> 10                             Transplantation #> 11        Heart And Great Vessel Malformations #> 12                             Transplantation #> 13                   Device And Technology Use #> 14                             Transplantation #> 15                                       Other #> 16                   Device And Technology Use #> 17                             Transplantation #> 18                                       Other #> 19                             Transplantation #> 20                   Device And Technology Use #> 21                   Device And Technology Use #> 22                   Acquired Immunodeficiency #> 23                                 Sarcoidosis #> 24                    Bone And Joint Anomalies #> 25                       Amino Acid Metabolism #> 26                     Carbohydrate Metabolism #> 27                            Lipid Metabolism #> 28                   Other Metabolic Disorders #> 29                             Cystic Fibrosis #> 30                           Storage Disorders #> 31                 Hereditary Immunodeficiency #> 32                          Hereditary Anemias #> 33                            Aplastic Anemias #> 34                     Coagulation Hemorrhagic #> 35                                  Leukopenia #> 36                    Hemophagocytic Syndromes #> 37                   Intellectual Disabilities #> 38                Chronic Respiratory Diseases #> 39               Cns Degeneration And Diseases #> 40                           Movement Diseases #> 41                    Infantile Cerebral Palsy #> 42                    Chronic Bladder Diseases #> 43                                    Epilepsy #> 44         Muscular Dystrophies And Myopathies #> 45                                       Other #> 46                        Endocardium Diseases #> 47                            Cardiomyopathies #> 48                         Conduction Disorder #> 49                                Dysrhythmias #> 50              Occlusion Of Cerebral Arteries #> 51 Polyarteritis Nodosa And Related Conditions #> 52      Diaphragm And Abdominal Wall Anomalies #> 53                  Inflammatory Bowel Disease #> 54         Chronic Liver Disease And Cirrhosis #> 55                       Chronic Renal Failure #> 56       Diffuse Diseases Of Connective Tissue #> 57         Brain And Spinal Cord Malformations #> 58                   Respiratory Malformations #> 59                        Congenital Anomalies #> 60                        Congenital Anomalies #> 61                       Chromosomal Anomalies #> 62                  Other Congenital Anomalies #> 63                          Fetal Malnutrition #> 64                          Extreme Immaturity #> 65                Cerebral Hemorrhage At Birth #> 66                 Spinal Cord Injury At Birth #> 67                              Birth Asphyxia #> 68             Hypoxic Ischemic Encephalopathy #> 69                        Respiratory Diseases #> 70                                       Other #> 71                             Transplantation"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/icd_compact_to_full.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ICD Compact Codes to Full Codes — icd_compact_to_full","title":"Convert ICD Compact Codes to Full Codes — icd_compact_to_full","text":"Take assumed ICD compact code string convert full code based ICD version (9 10) type (diagnostic procedure).  method formats strings validate code(s).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/icd_compact_to_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ICD Compact Codes to Full Codes — icd_compact_to_full","text":"","code":"icd_compact_to_full(x, icdv, dx)"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/icd_compact_to_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ICD Compact Codes to Full Codes — icd_compact_to_full","text":"x Character vector icdv Integer vector allowed ICD versions. Use 9L /10L. Defaults . dx Integer vector indicating allowed code type(s): 1L diagnostic (ICD-9-CM, ICD-10-CM, CDC mortality, ), 0L procedural (ICD-9-PCS, ICD-10-PCS). Defaults .","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/icd_compact_to_full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ICD Compact Codes to Full Codes — icd_compact_to_full","text":"character vector length x.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/is_icd.html","id":null,"dir":"Reference","previous_headings":"","what":"Is ICD — is_icd","title":"Is ICD — is_icd","text":"Answer question \"character string x valid ICD code?\" ICD codes character vectors. is_icd assess \"full codes\" (decimal point present appropriate) \"compact codes\" (decimal point omitted). ICD-10 code \"C00\" header code four-character codes C00.0, C00.1, C00.2, C00.3, C00.4, C00.5, C00.6, C00.7, C00.8, C00.9 exist. four-character codes assignable (2025) five-character descendants (e.g., C00.40) exist. source World Health Organization () CDC Mortality, years refer calendar years. CDC/CMS sources use U.S. federal fiscal year, starts October 1 (e.g., fiscal year 2024 runs 2023-10-01 2024-09-30).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/is_icd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is ICD — is_icd","text":"","code":"is_icd(   x,   icdv = c(9L, 10L),   dx = c(1L, 0L),   src = c(\"cms\", \"who\", \"cdc\"),   year,   headerok = FALSE,   ever.assignable = missing(year),   warn.ambiguous = TRUE,   full.codes = TRUE,   compact.codes = TRUE )"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/is_icd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is ICD — is_icd","text":"x Character vector ICD codes (full compact form). icdv Integer vector allowed ICD versions. Use 9L /10L. Defaults . dx Integer vector indicating allowed code type(s): 1L diagnostic (ICD-9-CM, ICD-10-CM, CDC mortality, ), 0L procedural (ICD-9-PCS, ICD-10-PCS). Defaults . src Character vector code sources. One \"cms\", \"\", \"cdc\". Defaults . year Numeric scalar. Calendar fiscal year reference. Default current year available per source. ICD-9, latest year 2015; ICD-10 source updated annually.  Calendar year CDC mortality. Fiscal year CMS. headerok Logical scalar. FALSE (default), assignable codes considered valid; TRUE, header codes also accepted. ever.assignable Logical scalar. TRUE ignore year return TRUE x ever assignable code. warn.ambiguous Logical scalar. TRUE (default), warn code matches one ICD version /type (e.g., CM PCS). full.codes Logical scalar. TRUE (default), match codes include decimal point applicable. compact.codes Logical scalar. TRUE (default), match codes without decimal point.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/is_icd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is ICD — is_icd","text":"logical vector length x.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/is_icd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is ICD — is_icd","text":"Similarly ICD-9-CM: \"055\" header measles; 055.0, 055.1, 055.2, 055.8, 055.9 assignable. Codes 055.3–055.6 exist. Code 055.7 header 055.71 055.72 exist. codes change status across years. example, ICD-9-CM 516.3 assignable fiscal years 2006–2011, became header 2012–2015.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/is_icd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is ICD — is_icd","text":"","code":"################################################################################ # Some ICD-9 diagnostic codes x <- c(\"136.2\", \"718.60\", \"642.02\")  is_icd(x, icdv =  9, dx = 1) #> [1] TRUE TRUE TRUE is_icd(x, icdv =  9, dx = 0) #> [1] FALSE FALSE FALSE is_icd(x, icdv = 10, dx = 1) #> [1] FALSE FALSE FALSE is_icd(x, icdv = 10, dx = 0) #> [1] FALSE FALSE FALSE  is_icd(x, icdv = 9, dx = 1, headerok = TRUE) #> [1] TRUE TRUE TRUE is_icd(x, icdv = 9, dx = 1, year = 2006) #> [1] TRUE TRUE TRUE  ################################################################################ # ICD code with, or without a dot.  The ICD-9 diagnostic code 799.3 and ICD-9 # procedure code 79.93 both become 7993 when assessed against the ICD code look # up tables.  As such \"7993\" is a valid ICD-9 diagnostic and procedure code, # whereas 799.3 is only a valid dx code, and 79.93 is only a valid pr code. # Further, codes such as \".7993\", \"7.993\", \"7993.\", are all non-valid codes.  x <- c(\"7993\", \".7993\", \"7.993\", \"79.93\", \"799.3\", \"7993.\") data.frame(   x,   dx = is_icd(x, icdv = 9, dx = 1),   pr = is_icd(x, icdv = 9, dx = 0) ) #>       x    dx    pr #> 1  7993  TRUE  TRUE #> 2 .7993 FALSE FALSE #> 3 7.993 FALSE FALSE #> 4 79.93 FALSE  TRUE #> 5 799.3  TRUE FALSE #> 6 7993. FALSE FALSE  ################################################################################ # example of a ICD-9 code that was assignable, but became a header when # more descriptive codes were introduced: ICD-9 diagnostic code 516.3 lookup_icd_codes(paste0(\"516.3\", c(\"\", as.character(0:9)))) #>    input_code match_type icdv dx full_code  code  src known_start known_end #> 1       516.3  full_code    9  1     516.3  5163  cms        1997      2015 #> 2      516.30  full_code    9  1    516.30 51630  cms        2012      2015 #> 3      516.31  full_code    9  1    516.31 51631  cms        2012      2015 #> 4      516.32  full_code    9  1    516.32 51632  cms        2012      2015 #> 5      516.33  full_code    9  1    516.33 51633  cms        2012      2015 #> 6      516.34  full_code    9  1    516.34 51634  cms        2012      2015 #> 7      516.35  full_code    9  1    516.35 51635  cms        2012      2015 #> 8      516.36  full_code    9  1    516.36 51636  cms        2012      2015 #> 9      516.37  full_code    9  1    516.37 51637  cms        2012      2015 #> 10     516.38       <NA>   NA NA      <NA>  <NA> <NA>          NA        NA #> 11     516.39       <NA>   NA NA      <NA>  <NA> <NA>          NA        NA #>    assignable_start assignable_end #> 1              1997           2011 #> 2              2012           2015 #> 3              2012           2015 #> 4              2012           2015 #> 5              2012           2015 #> 6              2012           2015 #> 7              2012           2015 #> 8              2012           2015 #> 9              2012           2015 #> 10               NA             NA #> 11               NA             NA  # ICD-9 code 516.3 was an assignable code through fiscal year 2011. is_icd(\"516.3\") #> [1] TRUE  # If `year` is omitted, and `ever.assignable = FALSE` then the `year` is # implied to be the max `known_end` year for ICD codes matched by `icdv`, # `dx`, and `src`. is_icd(\"516.3\", ever.assignable = FALSE) #> [1] FALSE  # when `year` is provided then `ever.assignable` is `FALSE` by default and # the return is TRUE when 516.3 was assignable and FALSE otherwise. is_icd(\"516.3\", year = 2015) #> [1] FALSE is_icd(\"516.3\", year = 2011) #> [1] TRUE  # when year is a non-assignable year, but `ever.assignable = TRUE` the return # will be TRUE.  Useful if you know the data is retrospective and collected # through fiscal year 2015. is_icd(\"516.3\", year = 2015, ever.assignable = TRUE) #> [1] TRUE  ################################################################################ # Consiser the string E010 #   - This could be a ICD-9-CM full code #   - Could be a ICD-10-CM compact code lookup_icd_codes(\"E010\") #>   input_code   match_type icdv dx full_code code src known_start known_end #> 1       E010    full_code    9  1      E010 E010 cms        2010      2015 #> 2       E010 compact_code   10  1     E01.0 E010 cms        2014      2026 #> 3       E010 compact_code   10  1     E01.0 E010 cdc        2001      2025 #> 4       E010 compact_code   10  1     E01.0 E010 who        2008      2019 #>   assignable_start assignable_end #> 1               NA             NA #> 2             2014           2026 #> 3             2001           2025 #> 4             2008           2019 subset(get_icd_codes(with.descriptions = TRUE), grepl(\"^E010$\", code)) #>        icdv dx full_code code src known_start known_end assignable_start #> 28019     9  1      E010 E010 cms        2010      2015               NA #> 124027   10  1     E01.0 E010 cms        2014      2026             2014 #> 124028   10  1     E01.0 E010 who        2008      2019             2008 #> 124029   10  1     E01.0 E010 cdc        2001      2025             2001 #>        assignable_end                                                    desc #> 28019              NA Activity involving other muscle strengthening exercises #> 124027           2026      Iodine-deficiency related diffuse (endemic) goiter #> 124028           2019      Iodine-deficiency-related diffuse (endemic) goitre #> 124029           2025      Iodine-deficiency-related diffuse (endemic) goiter #>        desc_start desc_end #> 28019        2010     2015 #> 124027       2014     2026 #> 124028       2008     2019 #> 124029       2001     2025  is_icd(\"E010\") #> [1] TRUE is_icd(\"E010\", icdv = 9) # FALSE because it is a header code and was never assignable #> [1] FALSE is_icd(\"E010\", icdv = 9, ever.assignable = TRUE) # FALSE #> [1] FALSE is_icd(\"E010\", icdv = 9, headerok = TRUE) # TRUE #> [1] TRUE"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/lookup_icd_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup ICD Codes — lookup_icd_codes","title":"Lookup ICD Codes — lookup_icd_codes","text":"Functions working ICD codes. ICD-10 code \"C00\" header code four-character codes C00.0, C00.1, C00.2, C00.3, C00.4, C00.5, C00.6, C00.7, C00.8, C00.9 exist. four-character codes assignable (2025) five-character descendants (e.g., C00.40) exist. source World Health Organization () CDC Mortality, years refer calendar years. CDC/CMS sources use U.S. federal fiscal year, starts October 1 (e.g., fiscal year 2024 runs 2023-10-01 2024-09-30).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/lookup_icd_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup ICD Codes — lookup_icd_codes","text":"","code":"lookup_icd_codes(   x,   regex = FALSE,   full.codes = TRUE,   compact.codes = TRUE,   ... )"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/lookup_icd_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup ICD Codes — lookup_icd_codes","text":"x Character vector ICD codes (full compact form). regex Logical scalar. TRUE, treat x regular expressions; FALSE, use exact matching. full.codes Logical scalar. TRUE (default), match codes include decimal point applicable. compact.codes Logical scalar. TRUE (default), match codes without decimal point. ... Passed base::grep() regex = TRUE","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/lookup_icd_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup ICD Codes — lookup_icd_codes","text":"data.frame one rows per input, including columns match_type: input match full compact code icdv: icd version (9 10) dx: diagnostic code (1) procedure code (0) full_code: full code string code: compact codes string src: source - CMS, CDC, . year ranges (known_*, assignable_*).","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/lookup_icd_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookup ICD Codes — lookup_icd_codes","text":"ICD codes character vectors. tools work either \"full codes\" (decimal point present appropriate) \"compact codes\" (decimal point omitted). Similarly ICD-9-CM: \"055\" header measles; 055.0, 055.1, 055.2, 055.8, 055.9 assignable. Codes 055.3–055.6 exist. Code 055.7 header 055.71 055.72 exist. codes change status across years. example, ICD-9-CM 516.3 assignable fiscal years 2006–2011, became header 2012–2015.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/mdcr.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Data — mdcr","title":"Synthetic Data — mdcr","text":"Synthetic Data","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/mdcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Data — mdcr","text":"","code":"mdcr"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/mdcr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Data — mdcr","text":"mdcr data.frame 4 columns, one patient id 41 diagnostic codes 41 possible procedure codes.  row one patient id. patid: patient identifier, integer values icdv: ICD version; integer values, 9 10 dx: indicator column ICD diagnostic (1) procedure (0) codes code: ICD code; character values","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/mdcr_longitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Longitudinal Data — mdcr_longitudinal","title":"Synthetic Longitudinal Data — mdcr_longitudinal","text":"Synthetic Longitudinal Data","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/mdcr_longitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Longitudinal Data — mdcr_longitudinal","text":"","code":"mdcr_longitudinal"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/mdcr_longitudinal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Longitudinal Data — mdcr_longitudinal","text":"mdcr_longitudinal data.frame four columns.  codes expected treated diagnostic codes ICD-9 codes match procedure codes well. patid: patient identifier, integer values date: date diagnostic code recorded icdv: ICD version 9 10, integer valued code: ICD codes; character values","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/medicalcoder-package.html","id":null,"dir":"Reference","previous_headings":"","what":"medicalcoder — medicalcoder-package","title":"medicalcoder — medicalcoder-package","text":"R package working ICD codes comorbidity assessments.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/medicalcoder-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"medicalcoder — medicalcoder-package","text":"medicalcoder lightweight, base-R package working ICD-9 ICD-10 diagnosis procedure codes. provides fast, dependency-free tools look , validate, manipulate ICD codes, also implementing widely used comorbidity algorithms Charlson, Elixhauser, Pediatric Complex Chronic Conditions (PCCC). Designed portability reproducibility, package avoids external dependencies—requiring R >= 3.5.0—yet offers rich set curated ICD code libraries United States' Centers Medicare Medicaid Services (CMS), Centers Disease Control (CDC), World Health Organization (). package balances performance elegance: internal caching, efficient joins, compact data structures make practical large-scale health data analyses, clean design makes easy extend audit. Whether need flag comorbidities, explore ICD hierarchies, standardize clinical coding workflows, medicalcoder provides robust, transparent foundation research applied work biomedical informatics.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/medicalcoder-package.html","id":"implementation","dir":"Reference","previous_headings":"","what":"Implementation","title":"medicalcoder — medicalcoder-package","text":"medicalcoder package intentionally designed built zero dependencies beyond R version 3.5.0 (needed due change data serialization) zero imports.  package completely self contained purposes installation use. design choice made several reasons. Ease installation: requirement R >= 3.5.0. need external files downloads packages ICD data-base. Works well different data paradigms Base R data.frames, tidyverse tibbles, data.tables data.table package. One reasons focusing building self-contained package need additional namespaces make installation use pseudo-air-gapped system easier.  author package routinely works machines extremely limited, access world-wide-web.  , relying system dependencies R packages can become difficult machine may may needed software.  long R >= 3.5.0 available medicalcoder work. great deal thought went performance methods size package.  internal data sets, example, stored structure easy use end user.  package namespaces loaded needed internal lookup tables generated cached.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/medicalcoder-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"medicalcoder — medicalcoder-package","text":"Maintainer: Peter DeWitt peter.dewitt@cuanschutz.edu (ORCID) contributors: Tell Bennett tell.bennett@cuanschutz.edu (ORCID) [contributor] Seth Russell seth.russell@cuanschutz.edu (ORCID) [contributor] Meg Rebull meg.rebull@cuanschutz.edu (ORCID) [contributor]","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of Comorbidities — summary.medicalcoder_comorbidities","title":"Summaries of Comorbidities — summary.medicalcoder_comorbidities","text":"Build summaries (counts percentages) comorbidity summary statistics method.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of Comorbidities — summary.medicalcoder_comorbidities","text":"","code":"# S3 method for class 'medicalcoder_comorbidities' summary(object, ...)"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of Comorbidities — summary.medicalcoder_comorbidities","text":"object medicalcoder_comorbidities object generated calling comorbidities() ... additional parameters, currently used","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of Comorbidities — summary.medicalcoder_comorbidities","text":"either list data data.frame","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summaries of Comorbidities — summary.medicalcoder_comorbidities","text":"","code":"pccc_v3.1_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"pccc_v3.1\",                 flag.method = 'current',                 poa = 1) summary(pccc_v3.1_results) #>          condition                                   label dxpr_or_tech_count #> 1  congeni_genetic      Other Congenital or Genetic Defect               3225 #> 2              cvd                          Cardiovascular               5147 #> 3               gi                        Gastrointestinal               5652 #> 4      hemato_immu              Hematologic or Immunologic               2832 #> 5       malignancy                              Malignancy               3784 #> 6        metabolic                               Metabolic               3407 #> 7             misc Miscellaneous, Not Elsewhere Classified                764 #> 8         neonatal                    Premature & Neonatal               1516 #> 9        neuromusc             Neurologic or Neuromuscular               5828 #> 10           renal                          Renal Urologic               2787 #> 11     respiratory                             Respiratory               3260 #> 12    any_tech_dep               Any Technology Dependence               7012 #> 13  any_transplant                     Any Transplantation               1585 #> 14       cmrb_flag                           Any Condition              20871 #> 15        num_cmrb                         >= 2 conditions              10657 #> 16        num_cmrb                         >= 3 conditions               4582 #> 17        num_cmrb                         >= 4 conditions               1571 #> 18        num_cmrb                         >= 5 conditions                418 #> 19        num_cmrb                         >= 6 conditions                 88 #> 20        num_cmrb                         >= 7 conditions                 13 #> 21        num_cmrb                         >= 8 conditions                  2 #> 22        num_cmrb                         >= 9 conditions                  0 #> 23        num_cmrb                        >= 10 conditions                  0 #> 24        num_cmrb                        >= 11 conditions                  0 #>    dxpr_or_tech_percent dxpr_only_count dxpr_only_percent tech_only_count #> 1           8.428728242            3225         8.4287282               0 #> 2          13.451988919            4560        11.9178297             283 #> 3          14.771836287            1420         3.7112540            3855 #> 4           7.401599498            2832         7.4015995               0 #> 5           9.889707804            3784         9.8897078               0 #> 6           8.904396006            3356         8.7711045              40 #> 7           1.996759187             121         0.3162407             643 #> 8           3.962155664            1516         3.9621557               0 #> 9          15.231822696            4564        11.9282839             316 #> 10          7.283989337            1876         4.9030370             555 #> 11          8.520202812            1848         4.8298573             755 #> 12         18.326276724              NA                NA              NA #> 13          4.142491245              NA                NA              NA #> 14         54.547592912              NA                NA              NA #> 15         27.852699807              NA                NA              NA #> 16         11.975328002              NA                NA              NA #> 17          4.105901417              NA                NA              NA #> 18          1.092467723              NA                NA              NA #> 19          0.229993205              NA                NA              NA #> 20          0.033976269              NA                NA              NA #> 21          0.005227118              NA                NA              NA #> 22          0.000000000              NA                NA              NA #> 23          0.000000000              NA                NA              NA #> 24          0.000000000              NA                NA              NA #>    tech_only_percent dxpr_and_tech_count dxpr_and_tech_percent #> 1          0.0000000                   0            0.00000000 #> 2          0.7396372                 304            0.79452198 #> 3         10.0752705                 377            0.98531180 #> 4          0.0000000                   0            0.00000000 #> 5          0.0000000                   0            0.00000000 #> 6          0.1045424                  11            0.02874915 #> 7          1.6805185                   0            0.00000000 #> 8          0.0000000                   0            0.00000000 #> 9          0.8258847                 948            2.47765407 #> 10         1.4505253                 356            0.93042706 #> 11         1.9732372                 657            1.71710836 #> 12                NA                  NA                    NA #> 13                NA                  NA                    NA #> 14                NA                  NA                    NA #> 15                NA                  NA                    NA #> 16                NA                  NA                    NA #> 17                NA                  NA                    NA #> 18                NA                  NA                    NA #> 19                NA                  NA                    NA #> 20                NA                  NA                    NA #> 21                NA                  NA                    NA #> 22                NA                  NA                    NA #> 23                NA                  NA                    NA #> 24                NA                  NA                    NA  charlson_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"charlson_quan2011\",                 flag.method = 'current',                 poa = 1) summary(charlson_results) #> $conditions #>                     condition_description condition count      percent #> 1                                AIDS/HIV   aidshiv     7  0.018294914 #> 2                          Any malignancy       mal  2577  6.735141916 #> 3                 Cerebrovascular disease     cebvd   411  1.074172809 #> 4               Chronic pulmonary disease      copd  3415  8.925304480 #> 5                Congestive heart failure       chf   684  1.787674455 #> 6                                Dementia       dem    13  0.033976269 #> 7     Diabetes with chronic complications       dmc    13  0.033976269 #> 8  Diabetes without chronic complications        dm   445  1.163033819 #> 9                Hemiplegia or paraplegia        hp  1177  3.076159113 #> 10                    Liver disease, mild       mld   663  1.732789713 #> 11      Liver disease, moderate to severe      msld   206  0.538393184 #> 12                 Metastatic solid tumor       mst   453  1.183942293 #> 13                  Myocardial infarction        mi    10  0.026135591 #> 14                   Peptic ulcer disease       pud    45  0.117610162 #> 15            Peripheral vascular disease       pvd   217  0.567142334 #> 16                          Renal disease       rnd   898  2.346976112 #> 17                      Rheumatic disease       rhd   136  0.355444044 #> 18                                   >= 1      <NA>  9841 25.720035544 #> 19                                   >= 2      <NA>  1368  3.575348910 #> 20                                   >= 3      <NA>   138  0.360671162 #> 21                                   >= 4      <NA>    20  0.052271183 #> 22                                   >= 5      <NA>     3  0.007840677 #>  #> $age_summary #>   age_score count percent #> 1      <NA> 38262     100 #>  #> $index_summary #>   min q1 median q3 max #> 1   0  0      0  0  10 #>   elixhauser_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"elixhauser_ahrq2025\",                 primarydx = 1,                 flag.method = 'current',                 poa = 1) summary(elixhauser_results) #> $conditions #>       condition count percent #> 1          AIDS     0       0 #> 2       ALCOHOL     0       0 #> 3       ANEMDEF     0       0 #> 4    AUTOIMMUNE     0       0 #> 5       BLDLOSS     0       0 #> 6   CANCER_LEUK     0       0 #> 7  CANCER_LYMPH     0       0 #> 8   CANCER_METS     0       0 #> 9  CANCER_NSITU     0       0 #> 10 CANCER_SOLID     0       0 #> 11         CBVD     0       0 #> 12         COAG     0       0 #> 13     DEMENTIA     0       0 #> 14      DEPRESS     0       0 #> 15      DIAB_CX     0       0 #> 16    DIAB_UNCX     0       0 #> 17   DRUG_ABUSE     0       0 #> 18           HF     0       0 #> 19       HTN_CX     0       0 #> 20     HTN_UNCX     0       0 #> 21    LIVER_MLD     0       0 #> 22    LIVER_SEV     0       0 #> 23 LUNG_CHRONIC     0       0 #> 24   NEURO_MOVT     0       0 #> 25    NEURO_OTH     0       0 #> 26   NEURO_SEIZ     0       0 #> 27        OBESE     0       0 #> 28    PARALYSIS     0       0 #> 29     PERIVASC     0       0 #> 30    PSYCHOSES     0       0 #> 31     PULMCIRC     0       0 #> 32   RENLFL_MOD     0       0 #> 33   RENLFL_SEV     0       0 #> 34 THYROID_HYPO     0       0 #> 35  THYROID_OTH     0       0 #> 36 ULCER_PEPTIC     0       0 #> 37        VALVE     0       0 #> 38     WGHTLOSS     0       0 #>  #> $index_summary #>         index min q1 median q3 max #> 1 readmission   0  0      0  0   0 #> 2   mortality   0  0      0  0   0 #>"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities_with_subconditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of Comorbidities with Subconditions — summary.medicalcoder_comorbidities_with_subconditions","title":"Summaries of Comorbidities with Subconditions — summary.medicalcoder_comorbidities_with_subconditions","text":"Build summaries (counts percentages) Pediatric Complex Chronic Condition (PCCC) condition subcondition.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities_with_subconditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of Comorbidities with Subconditions — summary.medicalcoder_comorbidities_with_subconditions","text":"","code":"# S3 method for class 'medicalcoder_comorbidities_with_subconditions' summary(object, ...)"},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities_with_subconditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of Comorbidities with Subconditions — summary.medicalcoder_comorbidities_with_subconditions","text":"object medicalcoder_comorbidities_with_subcondtions object generated calling comorbidities() subconditions = TRUE.  currently applicable PCCC. ... additional parameters, currently used","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities_with_subconditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of Comorbidities with Subconditions — summary.medicalcoder_comorbidities_with_subconditions","text":"data.frame five columns. condition primary condition subcondition subcondition(s) within condition.  row subcondition NA used report count percent_of_cohort condition overall. count number rows object applicable condition subcondition. percent_of_cohort: numeric value within [0, 100] percent rows object flagged condition subcondition. percent_of_those_with_condition: numeric value within [0, 100] subset rows object primary condition flagged subcondition.  NA primary condition.","code":""},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/reference/summary.medicalcoder_comorbidities_with_subconditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summaries of Comorbidities with Subconditions — summary.medicalcoder_comorbidities_with_subconditions","text":"","code":"pccc_v3.1_subcondition_results <-   comorbidities(data = mdcr,                 icd.codes = \"code\",                 id.vars = \"patid\",                 dx.var = \"dx\",                 method = \"pccc_v3.1\",                 flag.method = 'current',                 poa = 1,                 subconditions = TRUE) summary(pccc_v3.1_subcondition_results) #>          condition                                subcondition count #> 1  congeni_genetic                                        <NA>  3225 #> 2  congeni_genetic                    bone_and_joint_anomalies   825 #> 3  congeni_genetic                       chromosomal_anomalies  1544 #> 4  congeni_genetic      diaphragm_and_abdominal_wall_anomalies   300 #> 5  congeni_genetic                  other_congenital_anomalies   754 #> 6              cvd                                        <NA>  5147 #> 7              cvd                            cardiomyopathies   240 #> 8              cvd                         conduction_disorder   653 #> 9              cvd                   device_and_technology_use   587 #> 10             cvd                                dysrhythmias  1130 #> 11             cvd                        endocardium_diseases   278 #> 12             cvd        heart_and_great_vessel_malformations  2320 #> 13             cvd                                       other  1247 #> 14             cvd                             transplantation   271 #> 15              gi                                        <NA>  5652 #> 16              gi         chronic_liver_disease_and_cirrhosis   290 #> 17              gi                        congenital_anomalies   709 #> 18              gi                   device_and_technology_use  4232 #> 19              gi                  inflammatory_bowel_disease   264 #> 20              gi                                       other   295 #> 21              gi                             transplantation   343 #> 22     hemato_immu                                        <NA>  2832 #> 23     hemato_immu                   acquired_immunodeficiency    11 #> 24     hemato_immu                            aplastic_anemias   823 #> 25     hemato_immu                     coagulation_hemorrhagic   100 #> 26     hemato_immu       diffuse_diseases_of_connective_tissue   125 #> 27     hemato_immu                    hemophagocytic_syndromes    59 #> 28     hemato_immu                          hereditary_anemias   771 #> 29     hemato_immu                 hereditary_immunodeficiency   909 #> 30     hemato_immu                                  leukopenia    28 #> 31     hemato_immu                                       other    12 #> 32     hemato_immu polyarteritis_nodosa_and_related_conditions    46 #> 33     hemato_immu                                 sarcoidosis     3 #> 34     hemato_immu                             transplantation   181 #> 35      malignancy                                        <NA>  3784 #> 36      malignancy                                   neoplasms  3525 #> 37      malignancy                             transplantation   452 #> 38       metabolic                                        <NA>  3407 #> 39       metabolic                       amino_acid_metabolism   194 #> 40       metabolic                     carbohydrate_metabolism   130 #> 41       metabolic                   device_and_technology_use    51 #> 42       metabolic                         endocrine_disorders   884 #> 43       metabolic                            lipid_metabolism   354 #> 44       metabolic                   other_metabolic_disorders  1870 #> 45       metabolic                           storage_disorders    82 #> 46            misc                                        <NA>   764 #> 47            misc                   device_and_technology_use   643 #> 48            misc                             transplantation   121 #> 49        neonatal                                        <NA>  1516 #> 50        neonatal                              birth_asphyxia    11 #> 51        neonatal                cerebral_hemorrhage_at_birth    84 #> 52        neonatal                          extreme_immaturity   349 #> 53        neonatal                          fetal_malnutrition    45 #> 54        neonatal             hypoxic_ischemic_encephalopathy   130 #> 55        neonatal                                       other   247 #> 56        neonatal                        respiratory_diseases   950 #> 57        neonatal                 spinal_cord_injury_at_birth     0 #> 58       neuromusc                                        <NA>  5828 #> 59       neuromusc         brain_and_spinal_cord_malformations  1767 #> 60       neuromusc               cns_degeneration_and_diseases  1474 #> 61       neuromusc                   device_and_technology_use  1264 #> 62       neuromusc                                    epilepsy   833 #> 63       neuromusc                    infantile_cerebral_palsy  1322 #> 64       neuromusc                   intellectual_disabilities   161 #> 65       neuromusc                           movement_diseases   146 #> 66       neuromusc         muscular_dystrophies_and_myopathies   147 #> 67       neuromusc              occlusion_of_cerebral_arteries    92 #> 68       neuromusc                  other_neurologic_disorders   848 #> 69           renal                                        <NA>  2787 #> 70           renal                    chronic_bladder_diseases   519 #> 71           renal                       chronic_renal_failure   627 #> 72           renal                        congenital_anomalies   915 #> 73           renal                   device_and_technology_use   911 #> 74           renal                                       other   217 #> 75           renal                             transplantation   322 #> 76     respiratory                                        <NA>  3260 #> 77     respiratory                chronic_respiratory_diseases  1092 #> 78     respiratory                             cystic_fibrosis   400 #> 79     respiratory                   device_and_technology_use  1412 #> 80     respiratory                                       other    22 #> 81     respiratory                   respiratory_malformations  1091 #> 82     respiratory                             transplantation    39 #>    percent_of_cohort percent_of_those_with_condition #> 1        8.428728242                              NA #> 2        2.156186294                      25.5813953 #> 3        4.035335320                      47.8759690 #> 4        0.784067743                       9.3023256 #> 5        1.970623595                      23.3798450 #> 6       13.451988919                              NA #> 7        0.627254195                       4.6629104 #> 8        1.706654122                      12.6870021 #> 9        1.534159218                      11.4047018 #> 10       2.953321834                      21.9545366 #> 11       0.726569442                       5.4012046 #> 12       6.063457216                      45.0748009 #> 13       3.259108254                      24.2277055 #> 14       0.708274528                       5.2652030 #> 15      14.771836287                              NA #> 16       0.757932152                       5.1309271 #> 17       1.853013434                      12.5442321 #> 18      11.060582301                      74.8761500 #> 19       0.689979614                       4.6709130 #> 20       0.770999948                       5.2193914 #> 21       0.896450787                       6.0686483 #> 22       7.401599498                              NA #> 23       0.028749151                       0.3884181 #> 24       2.150959176                      29.0607345 #> 25       0.261355914                       3.5310734 #> 26       0.326694893                       4.4138418 #> 27       0.154199990                       2.0833333 #> 28       2.015054101                      27.2245763 #> 29       2.375725263                      32.0974576 #> 30       0.073179656                       0.9887006 #> 31       0.031362710                       0.4237288 #> 32       0.120223721                       1.6242938 #> 33       0.007840677                       0.1059322 #> 34       0.473054205                       6.3912429 #> 35       9.889707804                              NA #> 36       9.212795986                      93.1553911 #> 37       1.181328733                      11.9450317 #> 38       8.904396006                              NA #> 39       0.507030474                       5.6941591 #> 40       0.339762689                       3.8156736 #> 41       0.133291516                       1.4969181 #> 42       2.310386284                      25.9465806 #> 43       0.925199937                      10.3903728 #> 44       4.887355601                      54.8869974 #> 45       0.214311850                       2.4068095 #> 46       1.996759187                              NA #> 47       1.680518530                      84.1623037 #> 48       0.316240657                      15.8376963 #> 49       3.962155664                              NA #> 50       0.028749151                       0.7255937 #> 51       0.219538968                       5.5408971 #> 52       0.912132142                      23.0211082 #> 53       0.117610162                       2.9683377 #> 54       0.339762689                       8.5751979 #> 55       0.645549109                      16.2928760 #> 56       2.482881188                      62.6649077 #> 57       0.000000000                       0.0000000 #> 58      15.231822696                              NA #> 59       4.618159009                      30.3191489 #> 60       3.852386179                      25.2916953 #> 61       3.303538759                      21.6884008 #> 62       2.177094768                      14.2930679 #> 63       3.455125189                      22.6835964 #> 64       0.420783022                       2.7625257 #> 65       0.381579635                       2.5051476 #> 66       0.384193194                       2.5223061 #> 67       0.240447441                       1.5785861 #> 68       2.216298155                      14.5504461 #> 69       7.283989337                              NA #> 70       1.356437196                      18.6221744 #> 71       1.638701584                      22.4973089 #> 72       2.391406618                      32.8310011 #> 73       2.380952381                      32.6874776 #> 74       0.567142334                       7.7861500 #> 75       0.841566045                      11.5536419 #> 76       8.520202812                              NA #> 77       2.854006586                      33.4969325 #> 78       1.045423658                      12.2699387 #> 79       3.690345513                      43.3128834 #> 80       0.057498301                       0.6748466 #> 81       2.851393027                      33.4662577 #> 82       0.101928807                       1.1963190"},{"path":[]},{"path":"http://www.peteredewitt.com/medicalcoder/news/index.html","id":"bug-fixes-0-6-0-9000","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"medicalcoder 0.6.0.9000","text":"Elixhauser AHRQ 2022 - 2025 exclusions less severer conditions severer conditions flagged","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/news/index.html","id":"new-features-0-6-0-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"medicalcoder 0.6.0.9000","text":"comorbidities() return tibble input data tbl_df (#9). Assumming data.table /tibble namespaces available, initial release (v0.6.0) return data.table data.table passed comorbidities() due S3 method dispatches. tibble (tdl_df) data.frame passed comorbidities() return data.frame. release added logic determine input tibble tibble namespaces available, return comorbidities() tibble (list tibbles subconditions = TRUE). tests extended consider cases passing data.table tibble comorbidities associated namespaces available.","code":""},{"path":"http://www.peteredewitt.com/medicalcoder/news/index.html","id":"medicalcoder-060","dir":"Changelog","previous_headings":"","what":"medicalcoder 0.6.0","title":"medicalcoder 0.6.0","text":"CRAN release: 2025-10-15 lookup_icd_codes(), get_icd_codes(), icd_compact_to_full(), is_icd(). Introduces unified comorbidities() interface covering Charlson (Deyo, Quan 2005/2011, Glasheen), Elixhauser (original, Quan 2005, AHRQ 2017-2025), Pediatric Complex Chronic Conditions (v2.0/2.1/3.0/3.1). Adds support present--admission indicators, longitudinal look-back, age scoring, PCCC sub-condition flags within comorbidities(). Bundles curated ICD dictionaries alongside example datasets (mdcr, mdcr_longitudinal) reproducible testing demonstrations. Includes vignettes benchmarking summaries document usage patterns showcase performance without non-base dependencies.","code":""}]
